{"mappings":"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","sources":["src/js/getAndRenderTopRatedMovies.js","src/js/pagination.js","src/js/getMovies.js","src/js/renderMovieCard.js","src/js/advencedSearch.js","src/js/addToLocalStorage.js","src/js/searchAndRenderMovies.js","src/getMovies.js","src/js/students.js","src/index.js"],"sourcesContent":["const main = document.querySelector('.main-box');\r\nimport { getGenresList } from './getGenreList';\r\nimport { getMovies } from './getMovies';\r\nimport { render } from './renderMovieCard';\r\nimport * as pagination from './pagination';\r\nimport { onTopScroll } from './toTopBtn';\r\n\r\nlet genreList;\r\nlet currentPage = 1;\r\nconst renderMovieCard = async (link, pageNumber) => {\r\n  try {\r\n    const PromisesArray = [];\r\n    PromisesArray.push(getMovies(link, currentPage));\r\n    PromisesArray.push(getGenresList());\r\n    const getMoviesAndGenres = await Promise.all(PromisesArray);\r\n    let movies = getMoviesAndGenres[0];\r\n    genreList = getMoviesAndGenres[1];\r\n    main.innerHTML = '';\r\n    movies.data.results.map(elem => {\r\n      main.insertAdjacentHTML('beforeend', render(elem));\r\n    });\r\n    movies.data.total_pages < 500\r\n      ? pagination.getPaginationNumbers(movies.data.total_pages)\r\n      : pagination.getPaginationNumbers(500);\r\n    pagination.setCurrentPage(currentPage);\r\n    pagination.prevButton.addEventListener('click', async () => {\r\n      pagination.setCurrentPage(currentPage - 1);\r\n      movies = await getMovies(link, --currentPage);\r\n      main.innerHTML = '';\r\n      movies.data.results.map(elem => {\r\n        main.insertAdjacentHTML('beforeend', render(elem));\r\n      });\r\n      onTopScroll();\r\n    });\r\n    pagination.nextButton.addEventListener('click', async () => {\r\n      pagination.setCurrentPage(currentPage + 1);\r\n      movies = await getMovies(link, ++currentPage);\r\n      main.innerHTML = '';\r\n      movies.data.results.map(elem => {\r\n        main.insertAdjacentHTML('beforeend', render(elem));\r\n      });\r\n      onTopScroll();\r\n    });\r\n    document.querySelectorAll('.pagination__number').forEach(button => {\r\n      const pageIndex = Number(button.getAttribute('page-index'));\r\n      if (pageIndex) {\r\n        button.addEventListener('click', async () => {\r\n          pagination.setCurrentPage(pageIndex);\r\n          currentPage = pageIndex;\r\n\r\n          movies = await getMovies(link, currentPage);\r\n          main.innerHTML = '';\r\n          movies.data.results.map(elem => {\r\n            main.insertAdjacentHTML('beforeend', render(elem));\r\n          });\r\n          onTopScroll();\r\n        });\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.log('err ', error);\r\n  }\r\n};\r\n\r\nconst getGenreList = () => {\r\n  return genreList;\r\n};\r\nexport { renderMovieCard, getGenreList };\r\n","const paginationNumbers = document.getElementById('pagination__numbers');\n\nexport const nextButton = document.getElementById('next-button');\nexport const prevButton = document.getElementById('prev-button');\n\nlet pageCount;\n\nlet currentPage;\n\nconst appendPageNumber = index => {\n  if (index == pageCount) {\n    let div = document.createElement('span');\n    div.className = 'pagination__numbers-ellipsis';\n    div.innerHTML = '&hellip;';\n    div.classList.add('hidden-right');\n    paginationNumbers.appendChild(div);\n  }\n\n  const pageNumber = document.createElement('button');\n  pageNumber.className = 'pagination__number';\n  pageNumber.innerHTML = index;\n  pageNumber.setAttribute('page-index', index);\n  pageNumber.setAttribute('aria-label', 'Page ' + index);\n\n  if (index == 1 || index == pageCount) {\n    pageNumber.classList.add('hidden-mobile');\n  }\n\n  paginationNumbers.appendChild(pageNumber);\n\n  if (index == 1) {\n    let div = document.createElement('span');\n    div.className = 'pagination__numbers-ellipsis';\n    div.innerHTML = '&hellip;';\n    div.classList.add('hidden-left');\n    paginationNumbers.appendChild(div);\n  }\n};\n\nexport const getPaginationNumbers = pages => {\n  paginationNumbers.innerHTML = '';\n  pageCount = pages;\n  for (let i = 1; i <= pages; i++) {\n    appendPageNumber(i);\n  }\n};\n\nconst handleActivePageNumber = () => {\n  document.querySelectorAll('.pagination__number').forEach(button => {\n    button.classList.remove('active');\n\n    const pageIndex = Number(button.getAttribute('page-index'));\n    if (pageIndex == currentPage) {\n      button.classList.add('active');\n    }\n  });\n};\n\nconst disableButton = button => {\n  button.classList.add('disabled');\n  button.setAttribute('disabled', true);\n};\n\nconst enableButton = button => {\n  button.classList.remove('disabled');\n  button.removeAttribute('disabled');\n};\n\nconst handlePageButtonsStatus = () => {\n  if (currentPage === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (pageCount === currentPage) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n};\n\nconst displayLessPages = pageNum => {\n  const dots = document.querySelectorAll('.pagination__numbers-ellipsis');\n  console.log(dots);\n  document.querySelectorAll('.pagination__number').forEach(button => {\n    const pageIndex = Number(button.getAttribute('page-index'));\n\n    if (pageCount <= 7) {\n      button.classList.remove('hidden');\n      dots[0].classList.add('hidden-left');\n      dots[1].classList.add('hidden-right');\n    } else {\n      if (pageNum <= 4) {\n        dots[0].classList.add('hidden-left');\n        dots[1].classList.remove('hidden-right');\n      } else if (pageNum >= pageCount - 3) {\n        dots[0].classList.remove('hidden-left');\n        dots[1].classList.add('hidden-right');\n      } else {\n        dots[0].classList.remove('hidden-left');\n        dots[1].classList.remove('hidden-right');\n      }\n    }\n\n    if (pageNum <= 3) {\n      if (pageIndex == 1) {\n        button.classList.remove('hidden-mobile');\n      }\n      if (pageIndex == pageCount) {\n        button.classList.add('hidden-mobile');\n      }\n      if (pageIndex <= 5 || pageIndex == pageCount) {\n        button.classList.remove('hidden');\n      } else {\n        button.classList.add('hidden');\n      }\n    } else if (pageNum >= pageCount - 2) {\n      if (pageIndex == 1) {\n        button.classList.add('hidden-mobile');\n      }\n      if (pageIndex == pageCount) {\n        button.classList.remove('hidden-mobile');\n      }\n      if (pageIndex >= pageCount - 4 || pageIndex == 1) {\n        button.classList.remove('hidden');\n      } else {\n        button.classList.add('hidden');\n      }\n    } else {\n      if (pageCount <= 7) {\n        button.classList.remove('hidden');\n        dots[0].classList.add('hidden-left');\n        dots[1].classList.add('hidden-right');\n        if (pageIndex == 1 || pageIndex == pageCount) {\n          button.classList.remove('hidden-mobile');\n        }\n      } else {\n        if (pageIndex == 1 || pageIndex == pageCount) {\n          button.classList.remove('hidden');\n          button.classList.add('hidden-mobile');\n        } else if (pageIndex >= pageNum - 2 && pageIndex <= pageNum + 2) {\n          button.classList.remove('hidden');\n        } else {\n          button.classList.add('hidden');\n        }\n      }\n    }\n  });\n};\n\nexport const setCurrentPage = pageNum => {\n  currentPage = pageNum;\n\n  displayLessPages(currentPage);\n  handleActivePageNumber();\n  handlePageButtonsStatus();\n};\n","import axios from 'axios';\r\nconst loader = document.querySelector('.loader');\r\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\r\nconst API_URL = 'https://api.themoviedb.org/3/movie/popular';\r\nconst getMovies = async (\r\n  link = 'https://api.themoviedb.org/3/movie/popular',\r\n  pageNumber = 1\r\n) => {\r\n  loader.style.display = 'block';\r\n  try {\r\n    const response = await axios.get(link, {\r\n      params: {\r\n        api_key: `${API_KEY}`,\r\n        page: pageNumber,\r\n        language: 'en-US',\r\n      },\r\n    });\r\n    loader.style.display = 'none';\r\n    return response;\r\n  } catch (error) {\r\n    loader.style.display = 'none';\r\n    console.log(error);\r\n  }\r\n};\r\nexport { getMovies };\r\n","import { getGenreList } from './getAndRenderTopRatedMovies';\r\nconst getMovieYear = date => {\r\n  return date.substring(0, 4);\r\n};\r\nlet singleMovieGenres = '';\r\nconst getMovieGenres = (movieGenresIds, genreList) => {\r\n  singleMovieGenres = '';\r\n  movieGenresIds.map(id => {\r\n    genreList.map(elem => {\r\n      if (elem.id === id) {\r\n        id != movieGenresIds[movieGenresIds.length - 1]\r\n          ? (singleMovieGenres = singleMovieGenres + elem.name + ', ')\r\n          : (singleMovieGenres = singleMovieGenres + elem.name);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst render = elem => {\r\n  const genreList = getGenreList();\r\n  getMovieGenres(elem.genre_ids, genreList.data.genres);\r\n  return `\r\n<div class=\"movie-card\">\r\n  <img class=\"movie-card__image\" alt=\"\" src='https://image.tmdb.org/t/p/w500/${\r\n    elem.poster_path\r\n  }'}>\r\n  <div class=\"movie-card__label\">\r\n    <p class=\"movie-card__title\">${elem.title}</p>\r\n    <p class=\"movie-card__genre-year\">${singleMovieGenres} | ${getMovieYear(\r\n    elem.release_date\r\n  )}</p> \r\n    <p class=\"movie-card__id\">${elem.id}</p> \r\n  </div>\r\n</div>\r\n`;\r\n};\r\nexport { render };\r\n/*\r\n\r\nPowyższa funkcja przyjmuje pojedynczy obiekt z odpowiedzi z API .data.results jest to tablica obiektów jak ta poniżej a my chcemy pojedyncze obiekty więc map działa tutaj super\r\nprzy czym wykorzystuje tylko poster.path, original.title, release_date\r\n\r\nprzykładowe wykorzystanie na tablicy obiektów :\r\n \r\n    response.data.results.map(elem => {\r\n      main.insertAdjacentHTML('beforeend', render(elem));\r\n    });\r\n\r\nodpowiedz z API \r\n[\r\n    {\r\n        \"adult\": false,\r\n        \"backdrop_path\": \"/tmU7GeKVybMWFButWEGl2M4GeiP.jpg\",\r\n        \"genre_ids\": [\r\n            18,\r\n            80\r\n        ],\r\n        \"id\": 238,\r\n        \"original_language\": \"en\",\r\n        \"original_title\": \"The Godfather\",\r\n        \"overview\": \"Spanning the years 1945 to 1955, a chronicle of the fictional Italian-American Corleone crime family. When organized crime family patriarch, Vito Corleone barely survives an attempt on his life, his youngest son, Michael steps in to take care of the would-be killers, launching a campaign of bloody revenge.\",\r\n        \"popularity\": 107.368,\r\n        \"poster_path\": \"/3bhkrj58Vtu7enYsRolD1fZdja1.jpg\",\r\n        \"release_date\": \"1972-03-14\",\r\n        \"title\": \"The Godfather\",\r\n        \"video\": false,\r\n        \"vote_average\": 8.7,\r\n        \"vote_count\": 17154\r\n    },\r\n    {\r\n        \"adult\": false,\r\n        \"backdrop_path\": \"/wPU78OPN4BYEgWYdXyg0phMee64.jpg\",\r\n        \"genre_ids\": [\r\n            18,\r\n            80\r\n        ],\r\n        \"id\": 278,\r\n        \"original_language\": \"en\",\r\n        \"original_title\": \"The Shawshank Redemption\",\r\n        \"overview\": \"Framed in the 1940s for the double murder of his wife and her lover, upstanding banker Andy Dufresne begins a new life at the Shawshank prison, where he puts his accounting skills to work for an amoral warden. During his long stretch in prison, Dufresne comes to be admired by the other inmates -- including an older prisoner named Red -- for his integrity and unquenchable sense of hope.\",\r\n        \"popularity\": 106.534,\r\n        \"poster_path\": \"/hBcY0fE9pfXzvVaY4GKarweriG2.jpg\",\r\n        \"release_date\": \"1994-09-23\",\r\n        \"title\": \"The Shawshank Redemption\",\r\n        \"video\": false,\r\n        \"vote_average\": 8.7,\r\n        \"vote_count\": 22940\r\n    }\r\n]\r\n\r\n\r\n*/\r\n","import { renderMovieCard } from './getAndRenderTopRatedMovies';\nconst genres = document.querySelector('.genres-menu__select');\nconst genresClear = document.querySelector('.genres-menu__clear');\nlet ByGenres_API_URL = 'https://api.themoviedb.org/3/discover/movie?';\n\nlet SelectedAPI = 'https://api.themoviedb.org/3/movie/popular';\n\nimport { getGenresList } from './getGenreList';\n\nlet selectedGenre = [];\n\nconst getGenres = event => {\n  const genreList = getGenresList();\n  const getList = () => {\n    genreList.then(listOfGenres => {\n      for (let i = 0; i < listOfGenres.data.genres.length; i++) {\n        const movieGenre = document.createElement('button');\n        movieGenre.classList.add('genre');\n        movieGenre.id = listOfGenres.data.genres[i].id;\n        movieGenre.innerText = listOfGenres.data.genres[i].name;\n        movieGenre.addEventListener('click', () => {\n          movieGenre.classList.add('focused-genre');\n          if (selectedGenre === 0) {\n            selectedGenre.push(listOfGenres.data.genres[i].id);\n          } else if (selectedGenre.includes(listOfGenres.data.genres[i].id)) {\n            selectedGenre.forEach((id, idClear) => {\n              if (id == listOfGenres.data.genres[i].id) {\n                console.log(listOfGenres.data.genres[i].id);\n                selectedGenre.splice(idClear, 1);\n                movieGenre.classList.remove('focused-genre');\n              }\n            });\n          } else {\n            selectedGenre.push(listOfGenres.data.genres[i].id);\n          }\n          if (selectedGenre !== []) {\n            SelectedAPI =\n              ByGenres_API_URL +\n              '&with_genres=' +\n              encodeURI(selectedGenre.join(','));\n          } else {\n            SelectedAPI = 'https://api.themoviedb.org/3/movie/popular';\n          }\n          renderMovieCard(SelectedAPI);\n        });\n        genres.append(movieGenre);\n      }\n    });\n  };\n  getList();\n};\n\nconst clearGenres = event => {\n  selectedGenre.forEach(id =>\n    document.getElementById(id).classList.remove('focused-genre')\n  );\n  selectedGenre = [];\n  SelectedAPI = 'https://api.themoviedb.org/3/movie/popular';\n  renderMovieCard(SelectedAPI);\n};\n\ngenresClear.addEventListener('click', clearGenres);\ngetGenres();\n","import Notiflix from 'notiflix';\nconst addToQueue = document.querySelector('.queue-btn');\nconst addToWatched = document.querySelector('.watched-btn');\nconst modalOpen = document.querySelector('.modal');\nconst modalId = document.querySelector('.modal__id');\n\nlet queueMovies = [];\nlet watchedMovies = [];\nlet checkId = [];\n\nconst modalIdCheck = event => {\n  if (event.target.className === 'movie-card__image') {\n    checkId = event.target.parentNode.children[1].children[2].textContent;\n    const queueStorageId = localStorage.getItem(\n      'added-to-queue',\n      JSON.stringify(queueMovies)\n    );\n\n    const watchedStorageId = localStorage.getItem(\n      'added-to-watched',\n      JSON.stringify(watchedMovies)\n    );\n\n    if (queueStorageId.includes(checkId)) {\n      addToQueue.textContent = 'removed form queue';\n    } else {\n      addToQueue.textContent = 'add to queue';\n    }\n\n    if (watchedStorageId.includes(checkId)) {\n      addToWatched.textContent = 'removed form watched';\n    } else {\n      addToWatched.textContent = 'add to watched';\n    }\n  }\n};\n\nconst queueStorage = event => {\n  const queueMovieId = modalId.textContent;\n  if (!queueMovies.includes(queueMovieId)) {\n    queueMovies.push(queueMovieId);\n    localStorage.setItem('added-to-queue', JSON.stringify(queueMovies));\n  } else {\n    let deleteQueue = queueMovies.indexOf(queueMovieId);\n    if (deleteQueue > -1) {\n      queueMovies.splice(deleteQueue, 1);\n      localStorage.setItem('added-to-queue', JSON.stringify(queueMovies));\n      addToQueue.textContent = 'add to queue';\n      return Notiflix.Notify.info('Movie removed from queue');\n    }\n  }\n  addToQueue.textContent = 'removed form queue';\n  return Notiflix.Notify.success('Movie added to queue');\n};\n\nconst watchedStorage = event => {\n  const watchedMovieId = modalId.textContent;\n\n  if (!watchedMovies.includes(watchedMovieId)) {\n    watchedMovies.push(watchedMovieId);\n    localStorage.setItem('added-to-watched', JSON.stringify(watchedMovies));\n  } else {\n    let deleteWatched = watchedMovies.indexOf(watchedMovieId);\n    if (deleteWatched > -1) {\n      watchedMovies.splice(deleteWatched, 1);\n      localStorage.setItem('added-to-watched', JSON.stringify(watchedMovies));\n      addToWatched.textContent = 'add to watched';\n      return Notiflix.Notify.info('Movie removed from watched');\n    }\n  }\n  addToWatched.textContent = 'removed form watched';\n  return Notiflix.Notify.success('Movie added to watched');\n};\n\naddEventListener('click', modalIdCheck);\naddToQueue.addEventListener('click', queueStorage);\naddToWatched.addEventListener('click', watchedStorage);\n","import { getMovies } from '../getMovies';\nimport { render } from './renderMovieCard';\nimport * as pagination from './pagination';\n\nconst header = document.querySelector('.header__no-movies');\nconst main = document.querySelector('.main-box');\nconst inputSearch = document.querySelector(\"input[name='searchQuery']\");\nconst searchButton = document.querySelector('.header__search-form-btn');\n// const toTopBtn = document.querySelector('.to-top');\n\nlet currentPage = 1;\n\nsearchButton.addEventListener('click', renderFoundMovies);\n\nasync function renderFoundMovies(event) {\n  event.preventDefault();\n  header.innerHTML = '';\n  currentPage = 1;\n  const searchQuery = inputSearch.value;\n  if (!searchQuery) {\n    alert('Enter movie title');\n  } else {\n    let moviesList = await getMovies(searchQuery, currentPage);\n    if (!moviesList.results.length) {\n      header.innerHTML = `Search result not successful. Enter the correct movie name.`;\n    } else {\n      main.innerHTML = '';\n      console.log(moviesList);\n\n      moviesList.results.map(elem => {\n        main.insertAdjacentHTML('beforeend', render(elem));\n      });\n      moviesList.total_pages < 500\n        ? pagination.getPaginationNumbers(moviesList.total_pages)\n        : pagination.getPaginationNumbers(500);\n      pagination.setCurrentPage(currentPage);\n\n      pagination.prevButton.addEventListener('click', async () => {\n        pagination.setCurrentPage(currentPage - 1);\n        moviesList = await getMovies(searchQuery, --currentPage);\n        main.innerHTML = '';\n        console.log(moviesList);\n\n        moviesList.results.map(elem => {\n          main.insertAdjacentHTML('beforeend', render(elem));\n        });\n        onTopScroll();\n      });\n      pagination.nextButton.addEventListener('click', async () => {\n        pagination.setCurrentPage(currentPage + 1);\n        moviesList = await getMovies(searchQuery, ++currentPage);\n        main.innerHTML = '';\n        console.log(moviesList);\n\n        moviesList.results.map(elem => {\n          main.insertAdjacentHTML('beforeend', render(elem));\n        });\n        onTopScroll();\n      });\n      document.querySelectorAll('.pagination__number').forEach(button => {\n        const pageIndex = Number(button.getAttribute('page-index'));\n        if (pageIndex) {\n          button.addEventListener('click', async () => {\n            pagination.setCurrentPage(pageIndex);\n            currentPage = pageIndex;\n\n            moviesList = await getMovies(searchQuery, currentPage);\n            main.innerHTML = '';\n            console.log(moviesList);\n\n            moviesList.results.map(elem => {\n              main.insertAdjacentHTML('beforeend', render(elem));\n            });\n            onTopScroll();\n          });\n        }\n      });\n    }\n  }\n}\n\nexport { renderFoundMovies };\n\n// toTopBtn.addEventListener('click', onTopScroll);\n\n// window.addEventListener('scroll', onScrollToTopBtn);\n\n// function onScrollToTopBtn() {\n//   const offsetTrigger = 100;\n//   const pageOffset = window.pageYOffset;\n\n//   pageOffset > offsetTrigger\n//     ? toTopBtn.classList.remove('is-hidden')\n//     : toTopBtn.classList.add('is-hidden');\n// }\n\n// function onTopScroll() {\n//   window.scrollTo({\n//     top: 0,\n//     behavior: 'smooth',\n//   });\n// }\n// export { onTopScroll };\n","import axios from 'axios';\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\nconst API_URL = 'https://api.themoviedb.org/3/search/movie';\nconst loader = document.querySelector('.loader');\n\nexport async function getMovies(query, pageNumber = 1) {\n  loader.style.display = 'block';\n  try {\n    const response = await axios.get(API_URL, {\n      params: {\n        api_key: `${API_KEY}`,\n        query: `${query}`,\n        page: pageNumber,\n      },\n    });\n    loader.style.display = 'none';\n    return response.data;\n  } catch (error) {\n    loader.style.display = 'none';\n    console.error(error);\n  }\n}\n","const openBtn = document.querySelector('.footer__authors');\nconst closeBtn = document.querySelector('.students-modal__close-btn');\nconst modal = document.querySelector('.data-modal');\nopenBtn.addEventListener('click', toggleModal);\ncloseBtn.addEventListener('click', toggleModal);\n\nfunction toggleModal() {\n  modal.classList.toggle('is-hidden');\n}\n","import { renderMovieCard } from './js/getAndRenderTopRatedMovies';\nrenderMovieCard();\nimport { advencedSearch } from './js/advencedSearch.js';\nimport { addToLocalStorage } from './js/addToLocalStorage.js';\nimport { modalWindow } from './js/modalWindow.js';\nimport { renderFoundMovies } from './js/searchAndRenderMovies.js';\nimport './js/toTopBtn';\nimport './js/students';\nimport './js/firebase';\n"],"names":["$dfaf77c789ce7a24$var$pageCount","$dfaf77c789ce7a24$var$currentPage","$67ff39b709ebda48$var$genreList","$7pbsT","parcelRequire","$084c42c6fce2558a$var$loader","document","querySelector","$084c42c6fce2558a$var$API_KEY","$084c42c6fce2558a$export$60e1c8f5f122c5ac","default","link","pageNumber","response","error","_arguments","length","style","display","$dIxxU","get","params","api_key","concat","page","language","_state","sent","console","log","$fcf0b2ff60ad8845$var$singleMovieGenres","$fcf0b2ff60ad8845$export$b3890eb0ae9dca99","elem","date","genreList","$67ff39b709ebda48$export$321e906c11f8df73","movieGenresIds","map","id","name","$fcf0b2ff60ad8845$var$getMovieGenres","genre_ids","data","genres","poster_path","title","release_date","substring","$dfaf77c789ce7a24$var$paginationNumbers","getElementById","$dfaf77c789ce7a24$export$20141bf56c9254ea","$dfaf77c789ce7a24$export$9830b7182e908d9c","$dfaf77c789ce7a24$var$appendPageNumber","index","div","createElement","className","innerHTML","classList","add","appendChild","setAttribute","div1","$dfaf77c789ce7a24$export$4090a77486c7743","pages","i","$dfaf77c789ce7a24$var$disableButton","button","$dfaf77c789ce7a24$var$enableButton","remove","removeAttribute","$dfaf77c789ce7a24$export$5e52cab53995b7b9","pageNum","dots","querySelectorAll","forEach","pageIndex","Number","getAttribute","$dfaf77c789ce7a24$var$displayLessPages","$67ff39b709ebda48$var$main","$67ff39b709ebda48$var$currentPage","$67ff39b709ebda48$export$605b145a07818080","PromisesArray","getMoviesAndGenres","movies","push","$80lIJ","getGenresList","Promise","all","results","insertAdjacentHTML","total_pages","addEventListener","$dEmTs","onTopScroll","$4f43006a27c86238$var$genres","$4f43006a27c86238$var$genresClear","$4f43006a27c86238$var$SelectedAPI","$4f43006a27c86238$var$selectedGenre","event","then","listOfGenres","movieGenre","innerText","includes","idClear","splice","$4f43006a27c86238$var$ByGenres_API_URL","encodeURI","join","append","_loop","$iU1Pc","$43f58199d706652c$var$addToQueue","$43f58199d706652c$var$addToWatched","$43f58199d706652c$var$modalId","$43f58199d706652c$var$queueMovies","$43f58199d706652c$var$watchedMovies","$43f58199d706652c$var$checkId","target","parentNode","children","textContent","queueStorageId","localStorage","getItem","JSON","stringify","watchedStorageId","queueMovieId","deleteQueue","indexOf","setItem","$parcel$interopDefault","Notify","info","success","watchedMovieId","deleteWatched","$21143d9a2fe25349$var$API_KEY","$21143d9a2fe25349$var$API_URL","$21143d9a2fe25349$var$loader","$21143d9a2fe25349$export$60e1c8f5f122c5ac","query","$21143d9a2fe25349$var$_getMovies","apply","this","arguments","$a1b95faebac548f9$var$header","$a1b95faebac548f9$var$main","$a1b95faebac548f9$var$inputSearch","$a1b95faebac548f9$var$searchButton","$a1b95faebac548f9$var$currentPage","$a1b95faebac548f9$var$_renderFoundMovies","searchQuery","moviesList","preventDefault","value","alert","$470a45cf0b35b7b7$var$openBtn","$470a45cf0b35b7b7$var$closeBtn","$470a45cf0b35b7b7$var$modal","$470a45cf0b35b7b7$var$toggleModal","toggle"],"version":3,"file":"index.c845df13.js.map"}