{"mappings":"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","sources":["src/library.js","src/js/getMoviesById.js"],"sourcesContent":["import './js/getGenreList';\nimport './js/addToLocalStorage';\nimport './js/getMoviesById';\nimport './js/modalWindow';\nimport './js/firebase';\nimport './js/toTopBtn';\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\nimport { imageExists, getMovieYear } from './exportFunctions';\n\nlet movieID = '';\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\nconst loader = document.querySelector('.loader');\nconst watchedBtn = document.querySelector('.watched-list-btn');\nconst queueBtn = document.querySelector('.queue-list-btn');\nconst main = document.querySelector('.main-box');\nconst addToQueue = document.querySelector('.queue-btn');\nconst addToWatched = document.querySelector('.watched-btn');\n\nwatchedBtn.style.backgroundColor = ' #ff6b01';\n\nconst getMoviesbyId = async movieID => {\n  loader.style.display = 'block';\n  try {\n    let API_URL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    loader.style.display = 'none';\n\n    return response.data;\n  } catch (error) {\n    loader.style.display = 'none';\n    console.error(error);\n  }\n};\n\n//watched\nlet watchedMovies = [];\ngetWatchedMovies();\n\nasync function getWatchedMovies() {\n  queueBtn.removeAttribute('disabled');\n  main.innerHTML = '';\n  queueBtn.style.backgroundColor = ' transparent';\n  watchedBtn.style.backgroundColor = ' #ff6b01';\n\n  if (JSON.parse(localStorage.getItem('added-to-watched')) !== null) {\n    if (JSON.parse(localStorage.getItem('added-to-watched')).length === 0) {\n      Notify.info('There are no movies in your watched list!');\n      loader.style.display = 'none';\n    } else {\n      watchedMovies = JSON.parse(localStorage.getItem('added-to-watched'));\n      let watchedMoviesList = [];\n\n      for (let i = 0; i < watchedMovies.length; i++) {\n        let watchedMovieId = watchedMovies[i];\n        let watchedMoviesItem = await getMoviesbyId(watchedMovieId);\n\n        watchedMoviesList.push(watchedMoviesItem);\n      }\n      renderMovies(watchedMoviesList);\n    }\n    watchedBtn.setAttribute('disabled', true);\n  } else {\n    Notify.info('There are no movies in your watched list!');\n  }\n}\n\nwatchedBtn.addEventListener('click', event => {\n  event.preventDefault();\n  getWatchedMovies();\n});\n\n//queue\n\nlet queuedMovies = [];\n\nasync function getQueuedMovies() {\n  watchedBtn.removeAttribute('disabled');\n  main.innerHTML = '';\n  watchedBtn.style.backgroundColor = 'transparent';\n  queueBtn.style.backgroundColor = ' #ff6b01';\n\n  if (JSON.parse(localStorage.getItem('added-to-queue')) !== null) {\n    if (JSON.parse(localStorage.getItem('added-to-queue')).length === 0) {\n      Notify.info('There are no movies in your queue!');\n      loader.style.display = 'none';\n      \n    } else {\n      queuedMovies = JSON.parse(localStorage.getItem('added-to-queue'));\n      let queuedMoviesList = [];\n\n      for (let i = 0; i < queuedMovies.length; i++) {\n        let queuedMovieId = queuedMovies[i];\n        let queuedMoviesItem = await getMoviesbyId(queuedMovieId);\n\n        queuedMoviesList.push(queuedMoviesItem);\n      }\n      renderMovies(queuedMoviesList);\n    }\n    queueBtn.setAttribute('disabled', true);\n  } else {\n    Notify.info('There are no movies in your queue!');\n  }\n}\n\nqueueBtn.addEventListener('click', event => {\n  event.preventDefault();\n  getQueuedMovies();\n});\n\n//render movies\nfunction renderMovies(movies) {\n  const getSingleMoviesGenre = genres => {\n    let singleMovieGenres = '';\n    genres.map(elem => {\n      elem != genres[genres.length - 1]\n        ? (singleMovieGenres = singleMovieGenres + elem.name + ', ')\n        : (singleMovieGenres = singleMovieGenres + elem.name);\n    });\n    return singleMovieGenres;\n  };\n  const markup = movies\n    .map(movie => {\n      return `\n<div class=\"movie-card\">\n  <img class=\"movie-card__image\" alt=\"${movie.title} movie\"src=${imageExists(\n        'https://image.tmdb.org/t/p/w500',\n        movie.poster_path\n      )}>\n  <div class=\"movie-card__label\">\n    <p class=\"movie-card__title\">${movie.original_title}</p>\n    <div>\n    <span class=\"movie-card__genre-year\"> ${getSingleMoviesGenre(\n      movie.genres\n    )}  | ${getMovieYear(movie.release_date)}</span> \n    <span class=\"movie-card__vote\">${movie.vote_average.toFixed(1)}</span>\n    \n    </div>\n    <p class=\"movie-card__id\">${movie.id}</p> \n  </div>\n</div>\n`;\n    })\n    .join('');\n\n  main.innerHTML += markup;\n}\n\nconst queueRefresh = event => {\n  if (queueBtn.style.backgroundColor !== 'transparent') {\n    queueBtn.removeAttribute('disabled');\n    queueBtn.click();\n  }\n};\nconst watchedRefresh = event => {\n  if (watchedBtn.style.backgroundColor !== 'transparent') {\n    watchedBtn.removeAttribute('disabled');\n    watchedBtn.click();\n  }\n};\n\naddToQueue.addEventListener('click', queueRefresh);\naddToWatched.addEventListener('click', watchedRefresh);\n\n//<p class=\"movie-card__genre-year\">${singleMovieGenres} | ${getMovieYear(\n//movie.release_date\n//)}</p>\n"],"names":["parcelRequire","$2shzp","$f543b6b9e57872fd$var$loader","document","querySelector","$f543b6b9e57872fd$var$watchedBtn","$f543b6b9e57872fd$var$queueBtn","$f543b6b9e57872fd$var$main","$f543b6b9e57872fd$var$addToQueue","$f543b6b9e57872fd$var$addToWatched","style","backgroundColor","$f543b6b9e57872fd$var$getMoviesbyId","async","movieID","display","API_URL","response","default","get","data","error","console","$f543b6b9e57872fd$var$watchedMovies","$f543b6b9e57872fd$var$getWatchedMovies","removeAttribute","innerHTML","JSON","parse","localStorage","getItem","length","$eWCmQ","Notify","info","watchedMoviesList","i","watchedMovieId","watchedMoviesItem","push","$f543b6b9e57872fd$var$renderMovies","setAttribute","addEventListener","event","preventDefault","$f543b6b9e57872fd$var$queuedMovies","movies","markup","map","movie","title","$4bJs7","imageExists","poster_path","original_title","genres","singleMovieGenres","elem","name","getSingleMoviesGenre","getMovieYear","release_date","vote_average","toFixed","id","join","queuedMoviesList","queuedMovieId","queuedMoviesItem","$f543b6b9e57872fd$var$getQueuedMovies","click"],"version":3,"file":"library.cb6f10b0.js.map"}