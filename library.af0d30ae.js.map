{"mappings":"gfAAAA,EAAA,S,WCAA,IAAAC,EAAAD,EAAA,S,0BAKME,G,WAASC,SAASC,cAAc,YAChCC,EAAaF,SAASC,cAAc,qBACpCE,EAAWH,SAASC,cAAc,mBAClCG,EAAOJ,SAASC,cAAc,aACjBD,SAASC,cAAc,cACrBD,SAASC,cAAc,gBAG5CC,EAAWG,MAAMC,gBAAkB,WAGnC,I,EAAMC,G,GAAgB,EAAAT,EAAAU,UAAA,SAAMC,G,IAGpBC,EACEC,EAKCC,E,iEARTb,EAAOM,MAAMQ,QAAU,Q,iBAGJ,O,sBADbH,EAAU,sCAAyDI,OAAnBL,EAAQ,aAAmBK,OAfnE,mCAemE,mBAC9D,C,EAAMC,EAAAP,QAAMQ,IAAIN,I,OAIjC,OAJMC,EAAWM,EAAAC,OACjBnB,EAAOM,MAAMQ,QAAU,OACvBd,EAAOM,MAAMc,SAAW,SAExB,C,EAAOR,EAASS,M,cACTR,EAAAK,EAAAC,OACPnB,EAAOM,MAAMQ,QAAU,OACvBd,EAAOM,MAAMc,SAAW,SACxBE,QAAQT,MAAMA,G,0BAElB,I,SAd4BH,G,iCAiBxBa,EAAgB,G,SAKLC,I,OAAAC,EAAAC,MAAAC,KAAAC,U,UAAAH,I,OAAAA,GAAf,EAAA1B,EAAAU,UAAA,W,IAMMoB,EAWEC,EAEKC,EACHC,EACAC,E,wEApBR7B,EAAS8B,gBAAgB,YACzB9B,EAAS+B,YAAe,QACxB9B,EAAK+B,UAAY,GACjBhC,EAASE,MAAMC,gBAAkB,eACjCJ,EAAWG,MAAMC,gBAAkB,WAC/BsB,EAAsBQ,KAAKC,MAAMC,aAAaC,QAAQ,qBAAqBC,OAElB,OAAzDJ,KAAKC,MAAMC,aAAaC,QAAQ,qBAAhC,C,MACkE,IAAhEH,KAAKC,MAAMC,aAAaC,QAAQ,qBAAqBC,SACvDpC,EAAKqC,mBAAmB,YAAc,kEACtCvC,EAAWgC,YAAe,SAG5BnC,EAAOM,MAAMQ,QAAU,O,cAEvBS,EAAgBc,KAAKC,MAAMC,aAAaC,QAAQ,qBAC5CV,EAAA,GAEKC,EAAI,E,wBAAGA,EAAIR,EAAckB,QAC5BT,EAAiBT,EAAcQ,GACX,C,EAAMvB,EAAcwB,KAFP,C,YAEjCC,EAAoBf,EAAAC,OAExBW,EAAkBa,KAAKV,G,wBAJiBF,I,aAMxCa,aAAad,GACb3B,EAAWgC,YAAc,aAAiCpB,OAApBc,G,wBAE1C1B,EAAW0C,aAAa,YAAY,G,OACtC,KA7BenB,MAAAC,KAAAC,U,CAJfJ,IAqCArB,EAAW2C,iBAAiB,SAAS,SAAAC,GACnCA,EAAMC,iBACNxB,GACF,I","sources":["src/library.js","src/js/getMoviesById.js"],"sourcesContent":["import './js/getGenreList';\nimport './js/addToLocalStorage';\nimport './js/getMoviesById';\nimport './js/modalWindow';\nimport './js/firebase';\nimport './js/toTopBtn';\n","import axios from 'axios';\nimport { imageExists, getMovieYear } from './exportFunctions';\n\nlet movieID = '';\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\nconst loader = document.querySelector('.loader');\nconst watchedBtn = document.querySelector('.watched-list-btn');\nconst queueBtn = document.querySelector('.queue-list-btn');\nconst main = document.querySelector('.main-box');\nconst addToQueue = document.querySelector('.queue-btn');\nconst addToWatched = document.querySelector('.watched-btn');\n\n\nwatchedBtn.style.backgroundColor = ' #ff6b01';\n\n\nconst getMoviesbyId = async movieID => {\n  loader.style.display = 'block';\n  try {\n    let API_URL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(API_URL);\n    loader.style.display = 'none';\n    loader.style.overflow = 'hidden';\n\n    return response.data;\n  } catch (error) {\n    loader.style.display = 'none';\n    loader.style.overflow = 'hidden';\n    console.error(error);\n  }\n};\n\n//watched\nlet watchedMovies = [];\ngetWatchedMovies();\n\n\n\nasync function getWatchedMovies() {\n  queueBtn.removeAttribute('disabled');\n  queueBtn.textContent = `QUEUE`;\n  main.innerHTML = '';\n  queueBtn.style.backgroundColor = ' transparent';\n  watchedBtn.style.backgroundColor = ' #ff6b01';\n  let watchedMoviesNumber = JSON.parse(localStorage.getItem('added-to-watched')).length;\n\n  if (JSON.parse(localStorage.getItem('added-to-watched')) !== null) {\n    if (JSON.parse(localStorage.getItem('added-to-watched')).length === 0) {\n      main.insertAdjacentHTML('beforeend', `<p class=\"alert\">There are no movies in your watched list!</p>`);\n      watchedBtn.textContent = `QUEUE`;\n    }\n    \n    loader.style.display = 'none';\n  } else {\n    watchedMovies = JSON.parse(localStorage.getItem('added-to-watched'));\n    let watchedMoviesList = [];\n\n    for (let i = 0; i < watchedMovies.length; i++) {\n      let watchedMovieId = watchedMovies[i];\n      let watchedMoviesItem = await getMoviesbyId(watchedMovieId);\n\n      watchedMoviesList.push(watchedMoviesItem);\n    }\n      renderMovies(watchedMoviesList);\n      watchedBtn.textContent = `WATCHED : ${watchedMoviesNumber}`;\n  }\n  watchedBtn.setAttribute('disabled', true);\n}\n  \n\n\nwatchedBtn.addEventListener('click', event => {\n  event.preventDefault();\n  getWatchedMovies();\n});\n\n//queue\n\nlet queuedMovies = [];\n\nasync function getQueuedMovies() {\n  watchedBtn.removeAttribute('disabled');\n  watchedBtn.textContent = `WATCHED`;\n  main.innerHTML = '';\n  watchedBtn.style.backgroundColor = 'transparent';\n  queueBtn.style.backgroundColor = ' #ff6b01';\n  let queuedMoviesNumber = JSON.parse(localStorage.getItem('added-to-queue')).length;\n\n  if (JSON.parse(localStorage.getItem('added-to-queue')) !== null) {\n  if (JSON.parse(localStorage.getItem('added-to-queue')).length === 0) {\n    main.insertAdjacentHTML('beforeend', `<p class=\"alert\">There are no movies in your queue!</p>`);\n    queueBtn.textContent = `QUEUE`;\n    loader.style.display = 'none';\n      \n  } else {\n    queuedMovies = JSON.parse(localStorage.getItem('added-to-queue'));\n    let queuedMoviesList = [];\n\n    for (let i = 0; i < queuedMovies.length; i++) {\n      let queuedMovieId = queuedMovies[i];\n      let queuedMoviesItem = await getMoviesbyId(queuedMovieId);\n\n      queuedMoviesList.push(queuedMoviesItem);\n    }\n    renderMovies(queuedMoviesList);\n    queueBtn.textContent=`QUEUE : ${queuedMoviesNumber}`\n  }\n  queueBtn.setAttribute('disabled', true);\n}\n\nqueueBtn.addEventListener('click', event => {\n  event.preventDefault();\n  getQueuedMovies();\n});\n\n\n\n//render movies\nfunction renderMovies(movies) {\n  const getSingleMoviesGenre = genres => {\n    let singleMovieGenres = '';\n    genres.map(elem => {\n      elem != genres[genres.length - 1]\n        ? (singleMovieGenres = singleMovieGenres + elem.name + ', ')\n        : (singleMovieGenres = singleMovieGenres + elem.name);\n    });\n    return singleMovieGenres;\n  };\n  const markup = movies\n    .map(movie => {\n      return `\n<div class=\"movie-card\">\n  <img class=\"movie-card__image\" alt=\"${movie.title} movie\"src=${imageExists(\n        'https://image.tmdb.org/t/p/w500',\n        movie.poster_path\n      )}>\n  <div class=\"movie-card__label\">\n    <p class=\"movie-card__title\">${movie.original_title}</p>\n    <div>\n    <span class=\"movie-card__genre-year\"> ${getSingleMoviesGenre(\n      movie.genres\n    )}  | ${getMovieYear(movie.release_date)}</span> \n    <span class=\"movie-card__vote\">${movie.vote_average.toFixed(1)}</span>\n    \n    </div>\n    <p class=\"movie-card__id\">${movie.id}</p> \n  </div>\n</div>\n`;\n    })\n    .join('');\n\n  main.innerHTML += markup;\n}\n\nconst queueRefresh = event => {\n  if (queueBtn.style.backgroundColor !== 'transparent') {\n    queueBtn.removeAttribute('disabled');\n    queueBtn.click();\n  }\n};\nconst watchedRefresh = event => {\n  if (watchedBtn.style.backgroundColor !== 'transparent') {\n    watchedBtn.removeAttribute('disabled');\n    watchedBtn.click();\n  }\n};\n\naddToQueue.addEventListener('click', queueRefresh);\naddToWatched.addEventListener('click', watchedRefresh);\n\n//<p class=\"movie-card__genre-year\">${singleMovieGenres} | ${getMovieYear(\n//movie.release_date\n//)}</p>\n"],"names":["parcelRequire","$7pbsT","$c581f0284ec1c973$var$loader","document","querySelector","$c581f0284ec1c973$var$watchedBtn","$c581f0284ec1c973$var$queueBtn","$c581f0284ec1c973$var$main","style","backgroundColor","$c581f0284ec1c973$var$getMoviesbyId","default","movieID","API_URL","response","error","display","concat","$dIxxU","get","_state","sent","overflow","data","console","$c581f0284ec1c973$var$watchedMovies","$c581f0284ec1c973$var$getWatchedMovies","$c581f0284ec1c973$var$_getWatchedMovies","apply","this","arguments","watchedMoviesNumber","watchedMoviesList","i","watchedMovieId","watchedMoviesItem","removeAttribute","textContent","innerHTML","JSON","parse","localStorage","getItem","length","insertAdjacentHTML","push","renderMovies","setAttribute","addEventListener","event","preventDefault"],"version":3,"file":"library.af0d30ae.js.map"}