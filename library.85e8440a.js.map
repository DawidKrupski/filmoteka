{"mappings":"oeAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,wBAMA,MACME,EAASC,SAASC,cAAc,WAChCC,EAAaF,SAASC,cAAc,qBACpCE,EAAWH,SAASC,cAAc,mBAClCG,EAAOJ,SAASC,cAAc,aAI7BI,EAAgBC,MAAOC,IACzBR,EAAOS,MAAMC,QAAU,QACvB,IACD,IAAIC,EAAU,sCAAsCH,4DACnD,MAAMI,QAAiBb,EAAAc,QAAMC,IAAIH,GAGjC,OAFAX,EAAOS,MAAMC,QAAU,OAEhBE,EAASG,IAIlB,CAHE,MAAOC,GACPhB,EAAOS,MAAMC,QAAU,OACvBO,QAAQD,MAAMA,EAChB,GAOH,IAAIE,EAAgB,GAoCpBf,EAAWgB,iBAAiB,SAASC,IACjCA,EAAMC,iBAnCVd,iBAII,GAHAH,EAASkB,gBAAgB,YACzBjB,EAAKkB,UAAY,GAEgC,OAA7CC,aAAaC,QAAQ,oBACrBC,EAAAC,OAAOC,KAAK,iDAET,CACHV,EAAgBW,KAAKC,MAAMN,aAAaC,QAAQ,qBAEhD,IAAIM,EAAoB,GAGxB,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAce,OAAQD,IAAK,CAC3C,IAAIE,EAAiBhB,EAAcc,GAG/BG,QAA0B7B,EAAc4B,GAE5CH,EAAkBK,KAAKD,EAI3B,CACAE,EAAaN,EAEjB,CACA5B,EAAWmC,aAAa,YAAY,EAGxC,CAMIC,EAAA,IAMJ,IAAIC,EAAe,GAgCnB,SAASH,EAAaI,GAClB,MAKIC,EAASD,EACZE,KAAIC,IACH,MAAO,4GAGTA,EAAMC,uFAGyBD,EAAME,kEAbhBC,EAciCH,EAAMI,aAbnDD,EAAKE,UAAU,EAAG,gDAeCL,EAAMM,8BAhBb,IAAAH,CAmBxB,IAEII,KAAK,IAER9C,EAAKkB,WAAamB,CACpB,CA/BAtC,EAASe,iBAAiB,SAASC,IAC/BA,EAAMC,iBAxBVd,iBAIE,GAHAJ,EAAWmB,gBAAgB,YAC3BjB,EAAKkB,UAAY,GAE8B,OAA3CC,aAAaC,QAAQ,kBACvBC,EAAAC,OAAOC,KAAK,0CACP,CACLY,EAAeX,KAAKC,MAAMN,aAAaC,QAAQ,mBAC/C,IAAI2B,EAAmB,GAEvB,IAAK,IAAIpB,EAAI,EAAGA,EAAIQ,EAAaP,OAAQD,IAAK,CAC5C,IAAIqB,EAAgBb,EAAaR,GAE7BsB,QAAyBhD,EAAc+C,GAC3CD,EAAiBhB,KAAKkB,EACxB,CAEAjB,EAAae,EACf,CAEAhD,EAASkC,aAAa,YAAY,EACpC,CAIIiB,EAAA,I","sources":["src/library.js","src/js/getMoviesById.js"],"sourcesContent":["import './js/getGenreList';\nimport './js/getMoviesById';\nimport './js/modalWindow';\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\nimport './getGenreList';\n\n\nlet movieID = '';\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\nconst loader = document.querySelector('.loader');\nconst watchedBtn = document.querySelector('.watched-list-btn');\nconst queueBtn = document.querySelector('.queue-list-btn');\nconst main = document.querySelector('.main-box');\n\n\n\n const getMoviesbyId = async (movieID) => {\n     loader.style.display = 'block';\n     try {\n    let API_URL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US`;\n     const response = await axios.get(API_URL);\n     loader.style.display = 'none';\n    \n     return response.data;\n   } catch (error) {\n     loader.style.display = 'none';\n     console.error(error);\n   }\n};\n \n\n\n//watched\n\nlet watchedMovies = [];\n\nasync function getWatchedMovies() {\n    queueBtn.removeAttribute('disabled');\n    main.innerHTML = '';\n\n    if (localStorage.getItem('added-to-watched') === null) {\n        Notify.info('There are no movies in your watched list!');\n        \n    } else {\n        watchedMovies = JSON.parse(localStorage.getItem('added-to-watched'));\n        \n        let watchedMoviesList = [];\n    \n\n        for (let i = 0; i < watchedMovies.length; i++) {\n            let watchedMovieId = watchedMovies[i];\n            \n    \n            let watchedMoviesItem = await getMoviesbyId(watchedMovieId);\n\n            watchedMoviesList.push(watchedMoviesItem);\n            \n            \n    \n        }\n        renderMovies(watchedMoviesList);\n        \n    }\n    watchedBtn.setAttribute('disabled', true);\n    \n\n}\n\n\n\nwatchedBtn.addEventListener('click', event => {\n    event.preventDefault();\n    getWatchedMovies();\n});\n\n\n//queue\n\nlet queuedMovies = [];\n\n\nasync function getQueuedMovies() {\n  watchedBtn.removeAttribute('disabled');\n  main.innerHTML = '';\n\n  if (localStorage.getItem('added-to-queue') === null) {\n    Notify.info('There are no movies in your queue!');\n  } else {\n    queuedMovies = JSON.parse(localStorage.getItem('added-to-queue'));\n    let queuedMoviesList = [];\n\n    for (let i = 0; i < queuedMovies.length; i++) {\n      let queuedMovieId = queuedMovies[i];\n\n      let queuedMoviesItem = await getMoviesbyId(queuedMovieId);\n      queuedMoviesList.push(queuedMoviesItem);\n    }\n\n    renderMovies(queuedMoviesList);\n  }\n\n  queueBtn.setAttribute('disabled', true);\n}\n\nqueueBtn.addEventListener('click', event => {\n    event.preventDefault();\n    getQueuedMovies()\n});\n\n//render movies\nfunction renderMovies(movies) {\n    const getMovieYear = date => {\n      return date.substring(0, 4);\n    };\n   \n    \n  const markup = movies\n    .map(movie => {\n      return `\n<div class=\"movie-card\">\n  <img class=\"movie-card__image\" alt=\"\" src='https://image.tmdb.org/t/p/w500/${\n    movie.poster_path\n  }'}>\n  <div class=\"movie-card__label\">\n    <p class=\"movie-card__title\">${movie.original_title}</p>\n    <p class=\"movie-card__genre-year\">   | ${getMovieYear(movie.release_date)}</p> \n    \n    <p class=\"movie-card__id\">${movie.id}</p> \n  </div>\n</div>\n`;\n    })\n    .join('');\n\n  main.innerHTML += markup;\n}\n//<p class=\"movie-card__genre-year\">${singleMovieGenres} | ${getMovieYear(\n        //movie.release_date\n      //)}</p> "],"names":["parcelRequire","$2shzp","$f543b6b9e57872fd$var$loader","document","querySelector","$f543b6b9e57872fd$var$watchedBtn","$f543b6b9e57872fd$var$queueBtn","$f543b6b9e57872fd$var$main","$f543b6b9e57872fd$var$getMoviesbyId","async","movieID","style","display","API_URL","response","default","get","data","error","console","$f543b6b9e57872fd$var$watchedMovies","addEventListener","event","preventDefault","removeAttribute","innerHTML","localStorage","getItem","$eWCmQ","Notify","info","JSON","parse","watchedMoviesList","i","length","watchedMovieId","watchedMoviesItem","push","$f543b6b9e57872fd$var$renderMovies","setAttribute","$f543b6b9e57872fd$var$getWatchedMovies","$f543b6b9e57872fd$var$queuedMovies","movies","markup","map","movie","poster_path","original_title","date","release_date","substring","id","join","queuedMoviesList","queuedMovieId","queuedMoviesItem","$f543b6b9e57872fd$var$getQueuedMovies"],"version":3,"file":"library.85e8440a.js.map"}