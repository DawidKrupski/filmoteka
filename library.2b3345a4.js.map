{"mappings":"gfAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,S,kDAKA,I,EAEME,EAASC,SAASC,cAAc,WAChCC,EAAaF,SAASC,cAAc,qBACpCE,EAAWH,SAASC,cAAc,mBAClCG,EAAOJ,SAASC,cAAc,aAI7BI,G,GAAgB,EAAAP,EAAAQ,UAAA,SAAOC,G,IAGtBC,EACGC,EAICC,E,iEAPPX,EAAOY,MAAMC,QAAU,Q,iBAGN,O,sBADdJ,EAAU,sCAAyDK,OAAnBN,EAAQ,aAAmBM,OAXnE,mCAWmE,mBAC7D,C,EAAMC,EAAAR,QAAMS,IAAIP,I,OAGjC,OAHMC,EAAWO,EAAAC,OACjBlB,EAAOY,MAAMC,QAAU,OAEvB,C,EAAOH,EAASS,M,cACTR,EAAAM,EAAAC,OACPlB,EAAOY,MAAMC,QAAU,OACvBO,QAAQT,MAAMA,G,0BAEnB,I,SAZ8BH,G,iCAkB1Ba,EAAgB,G,SAELC,I,OAAAA,GAAf,EAAAvB,EAAAQ,UAAA,W,IAUYgB,EAGKC,EACDC,EAGAC,E,wEAhBZtB,EAASuB,gBAAgB,YACzBtB,EAAKuB,UAAY,GAEgC,OAA7CC,aAAaC,QAAQ,oBAArB,C,MACAC,EAAAC,OAAOC,KAAK,6C,cAGZZ,EAAgBa,KAAKC,MAAMN,aAAaC,QAAQ,qBAE5CP,EAAA,GAGKC,EAAI,E,wBAAGA,EAAIH,EAAce,QAC1BX,EAAiBJ,EAAcG,GAGX,C,EAAMlB,EAAcmB,KAJT,C,YAI/BC,EAAoBT,EAAAC,OAExBK,EAAkBc,KAAKX,G,wBANeF,I,aAW1Cc,EAAaf,G,wBAGjBpB,EAAWoC,aAAa,YAAY,G,OAGxC,KA9BeC,MAAAC,KAAAC,U,CAkCfvC,EAAWwC,iBAAiB,SAAS,SAAAC,GACjCA,EAAMC,iB,WAnCKvB,EAAAkB,MAAAC,KAAAC,U,CAoCXI,EACJ,IAKA,IAAIC,EAAe,G,SAGJC,I,OAAAA,GAAf,EAAAjD,EAAAQ,UAAA,W,IAQQ0C,EAEKzB,EACH0B,EAEAC,E,wEAZRhD,EAAWwB,gBAAgB,YAC3BtB,EAAKuB,UAAY,GAE8B,OAA3CC,aAAaC,QAAQ,kBAArB,C,MACFC,EAAAC,OAAOC,KAAK,sC,cAEZc,EAAeb,KAAKC,MAAMN,aAAaC,QAAQ,mBAC3CmB,EAAA,GAEKzB,EAAI,E,wBAAGA,EAAIuB,EAAaX,QAC3Bc,EAAgBH,EAAavB,GAEV,C,EAAMlB,EAAc4C,KAHP,C,YAGhCC,EAAmBlC,EAAAC,OACvB+B,EAAiBZ,KAAKc,G,wBAJiB3B,I,aAOzCc,EAAaW,G,wBAGf7C,EAASmC,aAAa,YAAY,G,OACpC,KArBeC,MAAAC,KAAAC,U,CA6Bf,SAASJ,EAAac,GAClB,IAKIC,EAASD,EACZE,KAAI,SAAAC,GACH,MAAO,6GAMsBzC,OAH/ByC,EAAMC,YACP,8EAG0C1C,OADVyC,EAAME,eAAe,qDAGxB3C,QAhBP4C,EAciCH,EAAMI,aAbnDD,EAAKE,UAAU,EAAG,IAa+C,+CAErC9C,OAATyC,EAAMM,GAAG,6BAhBhB,IAAAH,CAoBrB,IACCI,KAAK,IAERzD,EAAKuB,WAAayB,CACpB,CA/BAjD,EAASuC,iBAAiB,SAAS,SAAAC,GAC/BA,EAAMC,iB,WAxBKG,EAAAR,MAAAC,KAAAC,U,CAyBXqB,EACJ,I","sources":["src/library.js","src/js/getMoviesById.js"],"sourcesContent":["import './js/getGenreList';\nimport './js/getMoviesById';\nimport './js/modalWindow';\n","import axios from 'axios';\nimport { Notify } from 'notiflix';\nimport './getGenreList';\n\n\nlet movieID = '';\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\nconst loader = document.querySelector('.loader');\nconst watchedBtn = document.querySelector('.watched-list-btn');\nconst queueBtn = document.querySelector('.queue-list-btn');\nconst main = document.querySelector('.main-box');\n\n\n\n const getMoviesbyId = async (movieID) => {\n     loader.style.display = 'block';\n     try {\n    let API_URL = `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en-US`;\n     const response = await axios.get(API_URL);\n     loader.style.display = 'none';\n    \n     return response.data;\n   } catch (error) {\n     loader.style.display = 'none';\n     console.error(error);\n   }\n};\n \n\n\n//watched\n\nlet watchedMovies = [];\n\nasync function getWatchedMovies() {\n    queueBtn.removeAttribute('disabled');\n    main.innerHTML = '';\n\n    if (localStorage.getItem('added-to-watched') === null) {\n        Notify.info('There are no movies in your watched list!');\n        \n    } else {\n        watchedMovies = JSON.parse(localStorage.getItem('added-to-watched'));\n        \n        let watchedMoviesList = [];\n    \n\n        for (let i = 0; i < watchedMovies.length; i++) {\n            let watchedMovieId = watchedMovies[i];\n            \n    \n            let watchedMoviesItem = await getMoviesbyId(watchedMovieId);\n\n            watchedMoviesList.push(watchedMoviesItem);\n            \n            \n    \n        }\n        renderMovies(watchedMoviesList);\n        \n    }\n    watchedBtn.setAttribute('disabled', true);\n    \n\n}\n\n\n\nwatchedBtn.addEventListener('click', event => {\n    event.preventDefault();\n    getWatchedMovies();\n});\n\n\n//queue\n\nlet queuedMovies = [];\n\n\nasync function getQueuedMovies() {\n  watchedBtn.removeAttribute('disabled');\n  main.innerHTML = '';\n\n  if (localStorage.getItem('added-to-queue') === null) {\n    Notify.info('There are no movies in your queue!');\n  } else {\n    queuedMovies = JSON.parse(localStorage.getItem('added-to-queue'));\n    let queuedMoviesList = [];\n\n    for (let i = 0; i < queuedMovies.length; i++) {\n      let queuedMovieId = queuedMovies[i];\n\n      let queuedMoviesItem = await getMoviesbyId(queuedMovieId);\n      queuedMoviesList.push(queuedMoviesItem);\n    }\n\n    renderMovies(queuedMoviesList);\n  }\n\n  queueBtn.setAttribute('disabled', true);\n}\n\nqueueBtn.addEventListener('click', event => {\n    event.preventDefault();\n    getQueuedMovies()\n});\n\n//render movies\nfunction renderMovies(movies) {\n    const getMovieYear = date => {\n      return date.substring(0, 4);\n    };\n   \n    \n  const markup = movies\n    .map(movie => {\n      return `\n<div class=\"movie-card\">\n  <img class=\"movie-card__image\" alt=\"\" src='https://image.tmdb.org/t/p/w500/${\n    movie.poster_path\n  }'}>\n  <div class=\"movie-card__label\">\n    <p class=\"movie-card__title\">${movie.original_title}</p>\n    <p class=\"movie-card__genre-year\">   | ${getMovieYear(movie.release_date)}</p> \n    \n    <p class=\"movie-card__id\">${movie.id}</p> \n  </div>\n</div>\n`;\n    })\n    .join('');\n\n  main.innerHTML += markup;\n}\n//<p class=\"movie-card__genre-year\">${singleMovieGenres} | ${getMovieYear(\n        //movie.release_date\n      //)}</p> "],"names":["parcelRequire","$7pbsT","$c581f0284ec1c973$var$loader","document","querySelector","$c581f0284ec1c973$var$watchedBtn","$c581f0284ec1c973$var$queueBtn","$c581f0284ec1c973$var$main","$c581f0284ec1c973$var$getMoviesbyId","default","movieID","API_URL","response","error","style","display","concat","$dIxxU","get","_state","sent","data","console","$c581f0284ec1c973$var$watchedMovies","$c581f0284ec1c973$var$_getWatchedMovies","watchedMoviesList","i","watchedMovieId","watchedMoviesItem","removeAttribute","innerHTML","localStorage","getItem","$iU1Pc","Notify","info","JSON","parse","length","push","$c581f0284ec1c973$var$renderMovies","setAttribute","apply","this","arguments","addEventListener","event","preventDefault","$c581f0284ec1c973$var$getWatchedMovies","$c581f0284ec1c973$var$queuedMovies","$c581f0284ec1c973$var$_getQueuedMovies","queuedMoviesList","queuedMovieId","queuedMoviesItem","movies","markup","map","movie","poster_path","original_title","date","release_date","substring","id","join","$c581f0284ec1c973$var$getQueuedMovies"],"version":3,"file":"library.2b3345a4.js.map"}