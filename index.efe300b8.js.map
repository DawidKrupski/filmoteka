{"mappings":"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","sources":["src/js/getAndRenderTopRatedMovies.js","src/js/getMovies.js","src/js/renderMovieCard.js","src/js/pagination.js","src/js/advencedSearch.js","src/getMovies.js","src/js/searchAndRenderMovies.js","src/js/students.js","src/index.js"],"sourcesContent":["const main = document.querySelector('.main-box');\r\nimport { getGenresList } from './getGenreList';\r\nimport { getMovies } from './getMovies';\r\nimport { render } from './renderMovieCard';\r\nimport * as pagination from './pagination';\r\nimport { onTopScroll } from './toTopBtn';\r\nlet globalNextBtnFunc;\r\nlet globalPrevBtnFunc;\r\nlet genreList;\r\nlet currentPage = 1;\r\nconst renderMovieCard = async (link, pageNumber = 1) => {\r\n  try {\r\n    currentPage = pageNumber;\r\n    let movies = await getMovies(link, currentPage);\r\n    genreList = await getGenresList();\r\n    main.innerHTML = '';\r\n    movies.data.results.map(elem => {\r\n      main.insertAdjacentHTML('beforeend', render(elem));\r\n    });\r\n    movies.data.total_pages < 500\r\n      ? pagination.getPaginationNumbers(movies.data.total_pages)\r\n      : pagination.getPaginationNumbers(500);\r\n    pagination.setCurrentPage(currentPage);\r\n    //\r\n    globalPrevBtnFunc = async () => {\r\n      pagination.setCurrentPage(currentPage - 1);\r\n      movies = await getMovies(link, --currentPage);\r\n      main.innerHTML = '';\r\n      movies.data.results.map(elem => {\r\n        main.insertAdjacentHTML('beforeend', render(elem));\r\n      });\r\n      onTopScroll();\r\n    };\r\n    //\r\n    pagination.prevButton.addEventListener('click', globalPrevBtnFunc);\r\n    //\r\n    globalNextBtnFunc = async () => {\r\n      pagination.setCurrentPage(currentPage + 1);\r\n      movies = await getMovies(link, ++currentPage);\r\n      main.innerHTML = '';\r\n      movies.data.results.map(elem => {\r\n        main.insertAdjacentHTML('beforeend', render(elem));\r\n      });\r\n      onTopScroll();\r\n    };\r\n\r\n    pagination.nextButton.addEventListener('click', globalNextBtnFunc);\r\n\r\n    document.querySelectorAll('.pagination__number').forEach(button => {\r\n      const pageIndex = Number(button.getAttribute('page-index'));\r\n      if (pageIndex) {\r\n        button.addEventListener('click', async () => {\r\n          pagination.setCurrentPage(pageIndex);\r\n          currentPage = pageIndex;\r\n\r\n          movies = await getMovies(link, currentPage);\r\n          main.innerHTML = '';\r\n          movies.data.results.map(elem => {\r\n            main.insertAdjacentHTML('beforeend', render(elem));\r\n          });\r\n          onTopScroll();\r\n        });\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.log('err ', error);\r\n  }\r\n};\r\n\r\nconst cleanUpListeners = () => {\r\n  pagination.nextButton.removeEventListener('click', globalNextBtnFunc);\r\n  pagination.prevButton.removeEventListener('click', globalPrevBtnFunc);\r\n};\r\n\r\nconst getGenreList = () => {\r\n  return genreList;\r\n};\r\nexport { renderMovieCard, getGenreList, cleanUpListeners };\r\n","import axios from 'axios';\r\nconst loader = document.querySelector('.loader');\r\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\r\nconst API_URL = 'https://api.themoviedb.org/3/movie/popular';\r\nconst getMovies = async (\r\n  link = 'https://api.themoviedb.org/3/movie/popular',\r\n  pageNumber = 1\r\n) => {\r\n  loader.style.display = 'block';\r\n  try {\r\n    const response = await axios.get(link, {\r\n      params: {\r\n        api_key: `${API_KEY}`,\r\n        page: pageNumber,\r\n        language: 'en-US',\r\n      },\r\n    });\r\n    loader.style.display = 'none';\r\n    return response;\r\n  } catch (error) {\r\n    loader.style.display = 'none';\r\n    console.log(error);\r\n  }\r\n};\r\nexport { getMovies };\r\n","import { getGenreList } from './getAndRenderTopRatedMovies';\r\nimport { imageExists, getMovieYear } from './exportFunctions';\r\n\r\nlet singleMovieGenres = '';\r\nconst getMovieGenres = (movieGenresIds, genreList) => {\r\n  singleMovieGenres = '';\r\n  movieGenresIds.map(id => {\r\n    genreList.map(elem => {\r\n      if (elem.id === id) {\r\n        id != movieGenresIds[movieGenresIds.length - 1]\r\n          ? (singleMovieGenres = singleMovieGenres + elem.name + ', ')\r\n          : (singleMovieGenres = singleMovieGenres + elem.name);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst render = elem => {\r\n  const genreList = getGenreList();\r\n  getMovieGenres(elem.genre_ids, genreList.data.genres);\r\n  return `\r\n<div class=\"movie-card\">\r\n<img class=\"movie-card__image\" alt=\"${elem.title} movie\" src=${imageExists(\r\n    'https://image.tmdb.org/t/p/w500',\r\n    elem.poster_path\r\n  )}>\r\n  <div class=\"movie-card__label\">\r\n    <p class=\"movie-card__title\">${elem.title}</p>\r\n    <p class=\"movie-card__genre-year\">${singleMovieGenres} | ${getMovieYear(\r\n    elem.release_date\r\n  )}</p> \r\n    <p class=\"movie-card__id\">${elem.id}</p> \r\n  </div>\r\n</div>\r\n`;\r\n};\r\nexport { render, getMovieGenres, imageExists };\r\n/*\r\n\r\nPowyższa funkcja przyjmuje pojedynczy obiekt z odpowiedzi z API .data.results jest to tablica obiektów jak ta poniżej a my chcemy pojedyncze obiekty więc map działa tutaj super\r\nprzy czym wykorzystuje tylko poster.path, original.title, release_date\r\n\r\nprzykładowe wykorzystanie na tablicy obiektów :\r\n \r\n    response.data.results.map(elem => {\r\n      main.insertAdjacentHTML('beforeend', render(elem));\r\n    });\r\n\r\nodpowiedz z API \r\n[\r\n    {\r\n        \"adult\": false,\r\n        \"backdrop_path\": \"/tmU7GeKVybMWFButWEGl2M4GeiP.jpg\",\r\n        \"genre_ids\": [\r\n            18,\r\n            80\r\n        ],\r\n        \"id\": 238,\r\n        \"original_language\": \"en\",\r\n        \"original_title\": \"The Godfather\",\r\n        \"overview\": \"Spanning the years 1945 to 1955, a chronicle of the fictional Italian-American Corleone crime family. When organized crime family patriarch, Vito Corleone barely survives an attempt on his life, his youngest son, Michael steps in to take care of the would-be killers, launching a campaign of bloody revenge.\",\r\n        \"popularity\": 107.368,\r\n        \"poster_path\": \"/3bhkrj58Vtu7enYsRolD1fZdja1.jpg\",\r\n        \"release_date\": \"1972-03-14\",\r\n        \"title\": \"The Godfather\",\r\n        \"video\": false,\r\n        \"vote_average\": 8.7,\r\n        \"vote_count\": 17154\r\n    },\r\n    {\r\n        \"adult\": false,\r\n        \"backdrop_path\": \"/wPU78OPN4BYEgWYdXyg0phMee64.jpg\",\r\n        \"genre_ids\": [\r\n            18,\r\n            80\r\n        ],\r\n        \"id\": 278,\r\n        \"original_language\": \"en\",\r\n        \"original_title\": \"The Shawshank Redemption\",\r\n        \"overview\": \"Framed in the 1940s for the double murder of his wife and her lover, upstanding banker Andy Dufresne begins a new life at the Shawshank prison, where he puts his accounting skills to work for an amoral warden. During his long stretch in prison, Dufresne comes to be admired by the other inmates -- including an older prisoner named Red -- for his integrity and unquenchable sense of hope.\",\r\n        \"popularity\": 106.534,\r\n        \"poster_path\": \"/hBcY0fE9pfXzvVaY4GKarweriG2.jpg\",\r\n        \"release_date\": \"1994-09-23\",\r\n        \"title\": \"The Shawshank Redemption\",\r\n        \"video\": false,\r\n        \"vote_average\": 8.7,\r\n        \"vote_count\": 22940\r\n    }\r\n]\r\n\r\n\r\n*/\r\n","const paginationNumbers = document.getElementById('pagination__numbers');\n\nexport const nextButton = document.getElementById('next-button');\nexport const prevButton = document.getElementById('prev-button');\n\nlet pageCount;\n\nlet currentPage;\n\nconst appendPageNumber = index => {\n  if (index == pageCount) {\n    let div = document.createElement('span');\n    div.className = 'pagination__numbers-ellipsis';\n    div.innerHTML = '&hellip;';\n    div.classList.add('hidden-right');\n    paginationNumbers.appendChild(div);\n  }\n\n  const pageNumber = document.createElement('button');\n  pageNumber.className = 'pagination__number';\n  pageNumber.innerHTML = index;\n  pageNumber.setAttribute('page-index', index);\n  pageNumber.setAttribute('aria-label', 'Page ' + index);\n\n  if (index == 1 || index == pageCount) {\n    pageNumber.classList.add('hidden-mobile');\n  }\n\n  paginationNumbers.appendChild(pageNumber);\n\n  if (index == 1) {\n    let div = document.createElement('span');\n    div.className = 'pagination__numbers-ellipsis';\n    div.innerHTML = '&hellip;';\n    div.classList.add('hidden-left');\n    paginationNumbers.appendChild(div);\n  }\n};\n\nexport const getPaginationNumbers = pages => {\n  paginationNumbers.innerHTML = '';\n  pageCount = pages;\n  for (let i = 1; i <= pages; i++) {\n    appendPageNumber(i);\n  }\n};\n\nconst handleActivePageNumber = () => {\n  document.querySelectorAll('.pagination__number').forEach(button => {\n    button.classList.remove('active');\n\n    const pageIndex = Number(button.getAttribute('page-index'));\n    if (pageIndex == currentPage) {\n      button.classList.add('active');\n    }\n  });\n};\n\nconst disableButton = button => {\n  button.classList.add('disabled');\n  button.setAttribute('disabled', true);\n};\n\nconst enableButton = button => {\n  button.classList.remove('disabled');\n  button.removeAttribute('disabled');\n};\n\nconst handlePageButtonsStatus = () => {\n  if (currentPage === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (pageCount === currentPage) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n  if (pageCount <= 1) {\n    disableButton(nextButton);\n  }\n};\n\nconst displayLessPages = pageNum => {\n  const dots = document.querySelectorAll('.pagination__numbers-ellipsis');\n  console.log(dots);\n  document.querySelectorAll('.pagination__number').forEach(button => {\n    const pageIndex = Number(button.getAttribute('page-index'));\n\n    if (pageCount <= 7) {\n      button.classList.remove('hidden');\n      dots[0].classList.add('hidden-left');\n      dots[1].classList.add('hidden-right');\n    } else {\n      if (pageNum <= 4) {\n        dots[0].classList.add('hidden-left');\n        dots[1].classList.remove('hidden-right');\n      } else if (pageNum >= pageCount - 3) {\n        dots[0].classList.remove('hidden-left');\n        dots[1].classList.add('hidden-right');\n      } else {\n        dots[0].classList.remove('hidden-left');\n        dots[1].classList.remove('hidden-right');\n      }\n    }\n\n    if (pageNum <= 3) {\n      if (pageIndex == 1) {\n        button.classList.remove('hidden-mobile');\n      }\n      if (pageIndex == pageCount) {\n        button.classList.add('hidden-mobile');\n      }\n      if (pageIndex <= 5 || pageIndex == pageCount) {\n        button.classList.remove('hidden');\n      } else {\n        button.classList.add('hidden');\n      }\n      if (pageCount <= 3) {\n        button.classList.remove('hidden-mobile');\n      }\n    } else if (pageNum >= pageCount - 2) {\n      if (pageIndex == 1) {\n        button.classList.add('hidden-mobile');\n      }\n      if (pageIndex == pageCount) {\n        button.classList.remove('hidden-mobile');\n      }\n      if (pageIndex >= pageCount - 4 || pageIndex == 1) {\n        button.classList.remove('hidden');\n      } else {\n        button.classList.add('hidden');\n      }\n    } else {\n      if (pageCount <= 7) {\n        button.classList.remove('hidden');\n        dots[0].classList.add('hidden-left');\n        dots[1].classList.add('hidden-right');\n        if (pageIndex == 1 || pageIndex == pageCount) {\n          button.classList.remove('hidden-mobile');\n        }\n      } else {\n        if (pageIndex == 1 || pageIndex == pageCount) {\n          button.classList.remove('hidden');\n          button.classList.add('hidden-mobile');\n        } else if (pageIndex >= pageNum - 2 && pageIndex <= pageNum + 2) {\n          button.classList.remove('hidden');\n        } else {\n          button.classList.add('hidden');\n        }\n      }\n    }\n  });\n};\n\nexport const setCurrentPage = pageNum => {\n  currentPage = pageNum;\n\n  displayLessPages(currentPage);\n  handleActivePageNumber();\n  handlePageButtonsStatus();\n};\n","import {\n  renderMovieCard,\n  cleanUpListeners,\n} from './getAndRenderTopRatedMovies';\nconst genres = document.querySelector('.genres-menu__select');\nconst genresClear = document.querySelector('.genres-menu__clear');\nlet ByGenres_API_URL = 'https://api.themoviedb.org/3/discover/movie?';\n\nlet SelectedAPI = 'https://api.themoviedb.org/3/movie/popular';\n\nimport { getGenresList } from './getGenreList';\n\nlet selectedGenre = [];\nlet tmp = 1;\nconst getGenres = event => {\n  const genreList = getGenresList();\n  const getList = () => {\n    genreList.then(listOfGenres => {\n      for (let i = 0; i < listOfGenres.data.genres.length; i++) {\n        const movieGenre = document.createElement('button');\n        movieGenre.classList.add('genre');\n        movieGenre.id = listOfGenres.data.genres[i].id;\n        movieGenre.innerText = listOfGenres.data.genres[i].name;\n        movieGenre.addEventListener('click', () => {\n          movieGenre.classList.add('focused-genre');\n          if (selectedGenre === 0) {\n            selectedGenre.push(listOfGenres.data.genres[i].id);\n          } else if (selectedGenre.includes(listOfGenres.data.genres[i].id)) {\n            selectedGenre.forEach((id, idClear) => {\n              if (id == listOfGenres.data.genres[i].id) {\n                selectedGenre.splice(idClear, 1);\n                movieGenre.classList.remove('focused-genre');\n              }\n            });\n          } else {\n            selectedGenre.push(listOfGenres.data.genres[i].id);\n          }\n          if (selectedGenre !== []) {\n            tmp = 1;\n            SelectedAPI =\n              ByGenres_API_URL +\n              '&with_genres=' +\n              encodeURI(selectedGenre.join(','));\n          } else {\n            SelectedAPI = 'https://api.themoviedb.org/3/movie/popular';\n          }\n          cleanUpListeners();\n          renderMovieCard(SelectedAPI, tmp);\n        });\n        genres.append(movieGenre);\n      }\n    });\n  };\n  getList();\n};\n\nconst clearGenres = event => {\n  selectedGenre.forEach(id =>\n    document.getElementById(id).classList.remove('focused-genre')\n  );\n  selectedGenre = [];\n  SelectedAPI = 'https://api.themoviedb.org/3/movie/popular';\n  cleanUpListeners();\n  renderMovieCard(SelectedAPI);\n};\n\ngenresClear.addEventListener('click', clearGenres);\ngetGenres();\n","import axios from 'axios';\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\nconst API_URL = 'https://api.themoviedb.org/3/search/movie';\nconst loader = document.querySelector('.loader');\n\nexport async function getMovies(query, pageNumber = 1) {\n  loader.style.display = 'block';\n  try {\n    const response = await axios.get(API_URL, {\n      params: {\n        api_key: `${API_KEY}`,\n        query: `${query}`,\n        page: pageNumber,\n      },\n    });\n    loader.style.display = 'none';\n    return response.data;\n  } catch (error) {\n    loader.style.display = 'none';\n    console.error(error);\n  }\n}\n","import { getMovies } from '../getMovies';\nimport { render } from './renderMovieCard';\nimport * as pagination from './pagination';\nimport { onTopScroll } from './toTopBtn';\n\nconst header = document.querySelector('.header__no-movies');\nconst main = document.querySelector('.main-box');\nconst inputSearch = document.querySelector(\"input[name='searchQuery']\");\nconst searchButton = document.querySelector('.header__search-form-btn');\n// const toTopBtn = document.querySelector('.to-top');\n\nlet currentPage = 1;\n\nsearchButton.addEventListener('click', renderFoundMovies);\n\nasync function renderFoundMovies(event) {\n  event.preventDefault();\n  header.innerHTML = '';\n  currentPage = 1;\n  const searchQuery = inputSearch.value;\n  if (!searchQuery) {\n    alert('Enter movie title');\n  } else {\n    let moviesList = await getMovies(searchQuery, currentPage);\n    if (!moviesList.results.length) {\n      header.innerHTML = `Search result not successful. Enter the correct movie name.`;\n    } else {\n      main.innerHTML = '';\n      console.log(moviesList);\n\n      moviesList.results.map(elem => {\n        main.insertAdjacentHTML('beforeend', render(elem));\n      });\n      moviesList.total_pages < 500\n        ? pagination.getPaginationNumbers(moviesList.total_pages)\n        : pagination.getPaginationNumbers(500);\n      pagination.setCurrentPage(currentPage);\n\n      pagination.prevButton.addEventListener('click', async () => {\n        pagination.setCurrentPage(currentPage - 1);\n        moviesList = await getMovies(searchQuery, --currentPage);\n        main.innerHTML = '';\n        console.log(moviesList);\n\n        moviesList.results.map(elem => {\n          main.insertAdjacentHTML('beforeend', render(elem));\n        });\n        onTopScroll();\n      });\n      pagination.nextButton.addEventListener('click', async () => {\n        pagination.setCurrentPage(currentPage + 1);\n        moviesList = await getMovies(searchQuery, ++currentPage);\n        main.innerHTML = '';\n        console.log(moviesList);\n\n        moviesList.results.map(elem => {\n          main.insertAdjacentHTML('beforeend', render(elem));\n        });\n        onTopScroll();\n      });\n      document.querySelectorAll('.pagination__number').forEach(button => {\n        const pageIndex = Number(button.getAttribute('page-index'));\n        if (pageIndex) {\n          button.addEventListener('click', async () => {\n            pagination.setCurrentPage(pageIndex);\n            currentPage = pageIndex;\n\n            moviesList = await getMovies(searchQuery, currentPage);\n            main.innerHTML = '';\n            console.log(moviesList);\n\n            moviesList.results.map(elem => {\n              main.insertAdjacentHTML('beforeend', render(elem));\n            });\n            onTopScroll();\n          });\n        }\n      });\n    }\n  }\n}\n\nexport { renderFoundMovies };\n\n// toTopBtn.addEventListener('click', onTopScroll);\n\n// window.addEventListener('scroll', onScrollToTopBtn);\n\n// function onScrollToTopBtn() {\n//   const offsetTrigger = 100;\n//   const pageOffset = window.pageYOffset;\n\n//   pageOffset > offsetTrigger\n//     ? toTopBtn.classList.remove('is-hidden')\n//     : toTopBtn.classList.add('is-hidden');\n// }\n\n// function onTopScroll() {\n//   window.scrollTo({\n//     top: 0,\n//     behavior: 'smooth',\n//   });\n// }\n// export { onTopScroll };\n","const openBtn = document.querySelector('.footer__authors');\nconst closeBtn = document.querySelector('.students-modal__close-btn');\nconst modal = document.querySelector('.data-modal');\n\n// pokaż modal\nconst showStudents = () => {\n  modal.classList.remove('is-hidden');\n  \n  addEventListener('keydown', clickEscape);\n  addEventListener('click', closeByClick);\n};\n// zamknij modal\nconst closeStudents = () => {\n  modal.classList.add('is-hidden');\n \n  removeEventListener('keydown', clickEscape);\n  removeEventListener('click', closeByClick);\n};\n//zamknij na esc\nconst clickEscape = event => {\n  if (event.keyCode === 27) {\n    closeStudents();\n  }\n};\n// zamknij na klik poza oknem modalnym\nconst closeByClick = event => {\n  if (\n    !event.target.classList.contains('is-hidden') &&\n    !event.target.closest('.students-modal') &&\n    event.target.className !== 'footer__authors'\n  ) {\n    closeStudents();\n  }\n};\nopenBtn.addEventListener('click', showStudents);\ncloseBtn.addEventListener('click', closeStudents);\n","import { renderMovieCard } from './js/getAndRenderTopRatedMovies';\nrenderMovieCard();\nimport { advencedSearch } from './js/advencedSearch.js';\nimport { addToLocalStorage } from './js/addToLocalStorage.js';\nimport { modalWindow } from './js/modalWindow.js';\nimport { renderFoundMovies } from './js/searchAndRenderMovies.js';\nimport './js/toTopBtn';\nimport './js/students';\nimport './js/firebase';\n"],"names":["$k3DwN","parcelRequire","$2shzp","$8124735307ad2aa2$var$loader","document","querySelector","$8124735307ad2aa2$export$60e1c8f5f122c5ac","async","link","pageNumber","style","display","response","default","get","params","api_key","page","language","error","console","log","$0384bbdc6bba0e8b$var$singleMovieGenres","$0384bbdc6bba0e8b$export$b3890eb0ae9dca99","elem","genreList","$51d6a83be6aac59c$export$321e906c11f8df73","movieGenresIds","map","id","length","name","$0384bbdc6bba0e8b$export$ac35e66c181d10d8","genre_ids","data","genres","title","$4bJs7","imageExists","poster_path","$1bab9c519cfa82bc$var$paginationNumbers","getElementById","$1bab9c519cfa82bc$export$20141bf56c9254ea","$1bab9c519cfa82bc$export$9830b7182e908d9c","$1bab9c519cfa82bc$var$pageCount","$1bab9c519cfa82bc$var$currentPage","$1bab9c519cfa82bc$var$appendPageNumber","index","div","createElement","className","innerHTML","classList","add","appendChild","setAttribute","div1","$1bab9c519cfa82bc$export$4090a77486c7743","pages","i","$1bab9c519cfa82bc$var$disableButton","button","$1bab9c519cfa82bc$var$enableButton","remove","removeAttribute","$1bab9c519cfa82bc$export$5e52cab53995b7b9","pageNum","dots","querySelectorAll","forEach","pageIndex","Number","getAttribute","$1bab9c519cfa82bc$var$displayLessPages","$51d6a83be6aac59c$var$main","$51d6a83be6aac59c$var$globalNextBtnFunc","$51d6a83be6aac59c$var$globalPrevBtnFunc","$51d6a83be6aac59c$var$genreList","$51d6a83be6aac59c$var$currentPage","$51d6a83be6aac59c$export$605b145a07818080","movies","getGenresList","results","insertAdjacentHTML","total_pages","$hkaSy","onTopScroll","addEventListener","$51d6a83be6aac59c$export$e8e81d074b5cdbfb","removeEventListener","$c879dfbac1652e6f$var$genres","$c879dfbac1652e6f$var$genresClear","$c879dfbac1652e6f$var$SelectedAPI","$c879dfbac1652e6f$var$selectedGenre","$c879dfbac1652e6f$var$tmp","event","then","listOfGenres","movieGenre","innerText","push","includes","idClear","splice","$c879dfbac1652e6f$var$ByGenres_API_URL","encodeURI","join","append","$907a124c9074af64$var$loader","$907a124c9074af64$export$60e1c8f5f122c5ac","query","$523efdc554805040$var$header","$523efdc554805040$var$main","$523efdc554805040$var$inputSearch","$523efdc554805040$var$searchButton","$523efdc554805040$var$currentPage","preventDefault","searchQuery","value","moviesList","alert","$74548540d8d04030$var$openBtn","$74548540d8d04030$var$closeBtn","$74548540d8d04030$var$modal","$74548540d8d04030$var$closeStudents","$74548540d8d04030$var$clickEscape","$74548540d8d04030$var$closeByClick","keyCode","target","contains","closest"],"version":3,"file":"index.efe300b8.js.map"}