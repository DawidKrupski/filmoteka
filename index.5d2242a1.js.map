{"mappings":"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","sources":["src/js/getAndRenderTopRatedMovies.js","src/js/pagination.js","src/js/getMovies.js","src/js/renderMovieCard.js","src/js/advencedSearch.js","src/js/searchAndRenderMovies.js","src/getMovies.js","src/js/students.js","src/index.js"],"sourcesContent":["const main = document.querySelector('.main-box');\r\nimport { getGenresList } from './getGenreList';\r\nimport { getMovies } from './getMovies';\r\nimport { render } from './renderMovieCard';\r\nimport * as pagination from './pagination';\r\nimport { onTopScroll } from './toTopBtn';\r\nlet globalNextBtnFunc;\r\nlet globalPrevBtnFunc;\r\nlet genreList;\r\nlet currentPage = 1;\r\nconst renderMovieCard = async (link, pageNumber = 1) => {\r\n  try {\r\n    currentPage = pageNumber;\r\n    let movies = await getMovies(link, currentPage);\r\n    genreList = await getGenresList();\r\n    main.innerHTML = '';\r\n    movies.data.results.map(elem => {\r\n      main.insertAdjacentHTML('beforeend', render(elem));\r\n    });\r\n    movies.data.total_pages < 500\r\n      ? pagination.getPaginationNumbers(movies.data.total_pages)\r\n      : pagination.getPaginationNumbers(500);\r\n    pagination.setCurrentPage(currentPage);\r\n    //\r\n    globalPrevBtnFunc = async () => {\r\n      pagination.setCurrentPage(currentPage - 1);\r\n      movies = await getMovies(link, --currentPage);\r\n      main.innerHTML = '';\r\n      movies.data.results.map(elem => {\r\n        main.insertAdjacentHTML('beforeend', render(elem));\r\n      });\r\n      onTopScroll();\r\n    };\r\n    //\r\n    pagination.prevButton.addEventListener('click', globalPrevBtnFunc);\r\n    //\r\n    globalNextBtnFunc = async () => {\r\n      pagination.setCurrentPage(currentPage + 1);\r\n      movies = await getMovies(link, ++currentPage);\r\n      main.innerHTML = '';\r\n      movies.data.results.map(elem => {\r\n        main.insertAdjacentHTML('beforeend', render(elem));\r\n      });\r\n      onTopScroll();\r\n    };\r\n\r\n    pagination.nextButton.addEventListener('click', globalNextBtnFunc);\r\n\r\n    document.querySelectorAll('.pagination__number').forEach(button => {\r\n      const pageIndex = Number(button.getAttribute('page-index'));\r\n      if (pageIndex) {\r\n        button.addEventListener('click', async () => {\r\n          pagination.setCurrentPage(pageIndex);\r\n          currentPage = pageIndex;\r\n\r\n          movies = await getMovies(link, currentPage);\r\n          main.innerHTML = '';\r\n          movies.data.results.map(elem => {\r\n            main.insertAdjacentHTML('beforeend', render(elem));\r\n          });\r\n          onTopScroll();\r\n        });\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.log('err ', error);\r\n  }\r\n};\r\n\r\nconst cleanUpListeners = () => {\r\n  pagination.nextButton.removeEventListener('click', globalNextBtnFunc);\r\n  pagination.prevButton.removeEventListener('click', globalPrevBtnFunc);\r\n};\r\n\r\nconst getGenreList = () => {\r\n  return genreList;\r\n};\r\nexport { renderMovieCard, getGenreList, cleanUpListeners };\r\n","const paginationNumbers = document.getElementById('pagination__numbers');\n\nexport const nextButton = document.getElementById('next-button');\nexport const prevButton = document.getElementById('prev-button');\n\nlet pageCount;\n\nlet currentPage;\n\nconst appendPageNumber = index => {\n  if (index == pageCount) {\n    let div = document.createElement('span');\n    div.className = 'pagination__numbers-ellipsis';\n    div.innerHTML = '&hellip;';\n    div.classList.add('hidden-right');\n    paginationNumbers.appendChild(div);\n  }\n\n  const pageNumber = document.createElement('button');\n  pageNumber.className = 'pagination__number';\n  pageNumber.innerHTML = index;\n  pageNumber.setAttribute('page-index', index);\n  pageNumber.setAttribute('aria-label', 'Page ' + index);\n\n  if (index == 1 || index == pageCount) {\n    pageNumber.classList.add('hidden-mobile');\n  }\n\n  paginationNumbers.appendChild(pageNumber);\n\n  if (index == 1) {\n    let div = document.createElement('span');\n    div.className = 'pagination__numbers-ellipsis';\n    div.innerHTML = '&hellip;';\n    div.classList.add('hidden-left');\n    paginationNumbers.appendChild(div);\n  }\n};\n\nexport const getPaginationNumbers = pages => {\n  paginationNumbers.innerHTML = '';\n  pageCount = pages;\n  for (let i = 1; i <= pages; i++) {\n    appendPageNumber(i);\n  }\n};\n\nconst handleActivePageNumber = () => {\n  document.querySelectorAll('.pagination__number').forEach(button => {\n    button.classList.remove('active');\n\n    const pageIndex = Number(button.getAttribute('page-index'));\n    if (pageIndex == currentPage) {\n      button.classList.add('active');\n    }\n  });\n};\n\nconst disableButton = button => {\n  button.classList.add('disabled');\n  button.setAttribute('disabled', true);\n};\n\nconst enableButton = button => {\n  button.classList.remove('disabled');\n  button.removeAttribute('disabled');\n};\n\nconst handlePageButtonsStatus = () => {\n  if (currentPage === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (pageCount === currentPage) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n  if (pageCount <= 1) {\n    disableButton(nextButton);\n  }\n};\n\nconst displayLessPages = pageNum => {\n  const dots = document.querySelectorAll('.pagination__numbers-ellipsis');\n  document.querySelectorAll('.pagination__number').forEach(button => {\n    const pageIndex = Number(button.getAttribute('page-index'));\n\n    if (pageCount <= 7) {\n      button.classList.remove('hidden');\n      dots[0].classList.add('hidden-left');\n      dots[1].classList.add('hidden-right');\n    } else {\n      if (pageNum <= 4) {\n        dots[0].classList.add('hidden-left');\n        dots[1].classList.remove('hidden-right');\n      } else if (pageNum >= pageCount - 3) {\n        dots[0].classList.remove('hidden-left');\n        dots[1].classList.add('hidden-right');\n      } else {\n        dots[0].classList.remove('hidden-left');\n        dots[1].classList.remove('hidden-right');\n      }\n    }\n\n    if (pageNum <= 3) {\n      if (pageIndex == 1) {\n        button.classList.remove('hidden-mobile');\n      }\n      if (pageIndex == pageCount) {\n        button.classList.add('hidden-mobile');\n      }\n      if (pageIndex <= 5 || pageIndex == pageCount) {\n        button.classList.remove('hidden');\n      } else {\n        button.classList.add('hidden');\n      }\n      if (pageCount <= 3) {\n        button.classList.remove('hidden-mobile');\n      }\n    } else if (pageNum >= pageCount - 2) {\n      if (pageIndex == 1) {\n        button.classList.add('hidden-mobile');\n      }\n      if (pageIndex == pageCount) {\n        button.classList.remove('hidden-mobile');\n      }\n      if (pageIndex >= pageCount - 4 || pageIndex == 1) {\n        button.classList.remove('hidden');\n      } else {\n        button.classList.add('hidden');\n      }\n    } else {\n      if (pageCount <= 7) {\n        button.classList.remove('hidden');\n        dots[0].classList.add('hidden-left');\n        dots[1].classList.add('hidden-right');\n        if (pageIndex == 1 || pageIndex == pageCount) {\n          button.classList.remove('hidden-mobile');\n        }\n      } else {\n        if (pageIndex == 1 || pageIndex == pageCount) {\n          button.classList.remove('hidden');\n          button.classList.add('hidden-mobile');\n        } else if (pageIndex >= pageNum - 2 && pageIndex <= pageNum + 2) {\n          button.classList.remove('hidden');\n        } else {\n          button.classList.add('hidden');\n        }\n      }\n    }\n  });\n};\n\nexport const setCurrentPage = pageNum => {\n  currentPage = pageNum;\n\n  displayLessPages(currentPage);\n  handleActivePageNumber();\n  handlePageButtonsStatus();\n};\n","import axios from 'axios';\r\nconst loader = document.querySelector('.loader');\r\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\r\nconst API_URL = 'https://api.themoviedb.org/3/movie/popular';\r\nconst getMovies = async (\r\n  link = 'https://api.themoviedb.org/3/movie/popular',\r\n  pageNumber = 1\r\n) => {\r\n  loader.style.display = 'block';\r\n  try {\r\n    const response = await axios.get(link, {\r\n      params: {\r\n        api_key: `${API_KEY}`,\r\n        page: pageNumber,\r\n        language: 'en-US',\r\n      },\r\n    });\r\n    loader.style.display = 'none';\r\n    return response;\r\n  } catch (error) {\r\n    loader.style.display = 'none';\r\n    console.log(error);\r\n  }\r\n};\r\nexport { getMovies };\r\n","import { getGenreList } from './getAndRenderTopRatedMovies';\r\nimport { imageExists, getMovieYear } from './exportFunctions';\r\n\r\nlet singleMovieGenres = '';\r\nconst getMovieGenres = (movieGenresIds, genreList) => {\r\n  singleMovieGenres = '';\r\n  movieGenresIds.map(id => {\r\n    genreList.map(elem => {\r\n      if (elem.id === id) {\r\n        id != movieGenresIds[movieGenresIds.length - 1]\r\n          ? (singleMovieGenres = singleMovieGenres + elem.name + ', ')\r\n          : (singleMovieGenres = singleMovieGenres + elem.name);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst render = elem => {\r\n  const genreList = getGenreList();\r\n  getMovieGenres(elem.genre_ids, genreList.data.genres);\r\n  return `\r\n<div class=\"movie-card\">\r\n<img class=\"movie-card__image\" alt=\"${elem.title} movie\" src=${imageExists(\r\n    'https://image.tmdb.org/t/p/w500',\r\n    elem.poster_path\r\n  )}>\r\n  <div class=\"movie-card__label\">\r\n    <p class=\"movie-card__title\">${elem.title}</p>\r\n    <p class=\"movie-card__genre-year\">${singleMovieGenres} | ${getMovieYear(\r\n    elem.release_date\r\n  )}</p> \r\n    <p class=\"movie-card__id\">${elem.id}</p> \r\n  </div>\r\n</div>\r\n`;\r\n};\r\nexport { render, getMovieGenres, imageExists };\r\n/*\r\n\r\nPowyższa funkcja przyjmuje pojedynczy obiekt z odpowiedzi z API .data.results jest to tablica obiektów jak ta poniżej a my chcemy pojedyncze obiekty więc map działa tutaj super\r\nprzy czym wykorzystuje tylko poster.path, original.title, release_date\r\n\r\nprzykładowe wykorzystanie na tablicy obiektów :\r\n \r\n    response.data.results.map(elem => {\r\n      main.insertAdjacentHTML('beforeend', render(elem));\r\n    });\r\n\r\nodpowiedz z API \r\n[\r\n    {\r\n        \"adult\": false,\r\n        \"backdrop_path\": \"/tmU7GeKVybMWFButWEGl2M4GeiP.jpg\",\r\n        \"genre_ids\": [\r\n            18,\r\n            80\r\n        ],\r\n        \"id\": 238,\r\n        \"original_language\": \"en\",\r\n        \"original_title\": \"The Godfather\",\r\n        \"overview\": \"Spanning the years 1945 to 1955, a chronicle of the fictional Italian-American Corleone crime family. When organized crime family patriarch, Vito Corleone barely survives an attempt on his life, his youngest son, Michael steps in to take care of the would-be killers, launching a campaign of bloody revenge.\",\r\n        \"popularity\": 107.368,\r\n        \"poster_path\": \"/3bhkrj58Vtu7enYsRolD1fZdja1.jpg\",\r\n        \"release_date\": \"1972-03-14\",\r\n        \"title\": \"The Godfather\",\r\n        \"video\": false,\r\n        \"vote_average\": 8.7,\r\n        \"vote_count\": 17154\r\n    },\r\n    {\r\n        \"adult\": false,\r\n        \"backdrop_path\": \"/wPU78OPN4BYEgWYdXyg0phMee64.jpg\",\r\n        \"genre_ids\": [\r\n            18,\r\n            80\r\n        ],\r\n        \"id\": 278,\r\n        \"original_language\": \"en\",\r\n        \"original_title\": \"The Shawshank Redemption\",\r\n        \"overview\": \"Framed in the 1940s for the double murder of his wife and her lover, upstanding banker Andy Dufresne begins a new life at the Shawshank prison, where he puts his accounting skills to work for an amoral warden. During his long stretch in prison, Dufresne comes to be admired by the other inmates -- including an older prisoner named Red -- for his integrity and unquenchable sense of hope.\",\r\n        \"popularity\": 106.534,\r\n        \"poster_path\": \"/hBcY0fE9pfXzvVaY4GKarweriG2.jpg\",\r\n        \"release_date\": \"1994-09-23\",\r\n        \"title\": \"The Shawshank Redemption\",\r\n        \"video\": false,\r\n        \"vote_average\": 8.7,\r\n        \"vote_count\": 22940\r\n    }\r\n]\r\n\r\n\r\n*/\r\n","import {\n  renderMovieCard,\n  cleanUpListeners,\n} from './getAndRenderTopRatedMovies';\nconst genres = document.querySelector('.genres-menu__select');\nconst genresClear = document.querySelector('.genres-menu__clear');\nlet ByGenres_API_URL = 'https://api.themoviedb.org/3/discover/movie?';\n\nlet SelectedAPI = 'https://api.themoviedb.org/3/movie/popular';\n\nimport { getGenresList } from './getGenreList';\n\nlet selectedGenre = [];\nlet tmp = 1;\nconst getGenres = event => {\n  const genreList = getGenresList();\n  const getList = () => {\n    genreList.then(listOfGenres => {\n      for (let i = 0; i < listOfGenres.data.genres.length; i++) {\n        const movieGenre = document.createElement('button');\n        movieGenre.classList.add('genre');\n        movieGenre.id = listOfGenres.data.genres[i].id;\n        movieGenre.innerText = listOfGenres.data.genres[i].name;\n        movieGenre.addEventListener('click', () => {\n          movieGenre.classList.add('focused-genre');\n          if (selectedGenre === 0) {\n            selectedGenre.push(listOfGenres.data.genres[i].id);\n          } else if (selectedGenre.includes(listOfGenres.data.genres[i].id)) {\n            selectedGenre.forEach((id, idClear) => {\n              if (id == listOfGenres.data.genres[i].id) {\n                selectedGenre.splice(idClear, 1);\n                movieGenre.classList.remove('focused-genre');\n              }\n            });\n          } else {\n            selectedGenre.push(listOfGenres.data.genres[i].id);\n          }\n          if (selectedGenre !== []) {\n            tmp = 1;\n            SelectedAPI =\n              ByGenres_API_URL +\n              '&with_genres=' +\n              encodeURI(selectedGenre.join(','));\n          } else {\n            SelectedAPI = 'https://api.themoviedb.org/3/movie/popular';\n          }\n          cleanUpListeners();\n          renderMovieCard(SelectedAPI, tmp);\n        });\n        genres.append(movieGenre);\n      }\n    });\n  };\n  getList();\n};\n\nconst clearGenres = event => {\n  selectedGenre.forEach(id =>\n    document.getElementById(id).classList.remove('focused-genre')\n  );\n  selectedGenre = [];\n  SelectedAPI = 'https://api.themoviedb.org/3/movie/popular';\n  cleanUpListeners();\n  renderMovieCard(SelectedAPI);\n};\n\ngenresClear.addEventListener('click', clearGenres);\ngetGenres();\n","import { getMovies } from '../getMovies';\nimport { render } from './renderMovieCard';\nimport * as pagination from './pagination';\nimport { onTopScroll } from './toTopBtn';\n\nconst header = document.querySelector('.header__no-movies');\nconst main = document.querySelector('.main-box');\nconst inputSearch = document.querySelector(\"input[name='searchQuery']\");\nconst searchButton = document.querySelector('.header__search-form-btn');\n// const toTopBtn = document.querySelector('.to-top');\n\nlet currentPage = 1;\n\nsearchButton.addEventListener('click', renderFoundMovies);\n\nasync function renderFoundMovies(event) {\n  event.preventDefault();\n  header.innerHTML = '';\n  currentPage = 1;\n  const searchQuery = inputSearch.value;\n  if (!searchQuery) {\n    alert('Enter movie title');\n  } else {\n    let moviesList = await getMovies(searchQuery, currentPage);\n    if (!moviesList.results.length) {\n      header.innerHTML = `Search result not successful. Enter the correct movie name.`;\n    } else {\n      main.innerHTML = '';\n      console.log(moviesList);\n\n      moviesList.results.map(elem => {\n        main.insertAdjacentHTML('beforeend', render(elem));\n      });\n      moviesList.total_pages < 500\n        ? pagination.getPaginationNumbers(moviesList.total_pages)\n        : pagination.getPaginationNumbers(500);\n      pagination.setCurrentPage(currentPage);\n\n      pagination.prevButton.addEventListener('click', async () => {\n        pagination.setCurrentPage(currentPage - 1);\n        moviesList = await getMovies(searchQuery, --currentPage);\n        main.innerHTML = '';\n        console.log(moviesList);\n\n        moviesList.results.map(elem => {\n          main.insertAdjacentHTML('beforeend', render(elem));\n        });\n        onTopScroll();\n      });\n      pagination.nextButton.addEventListener('click', async () => {\n        pagination.setCurrentPage(currentPage + 1);\n        moviesList = await getMovies(searchQuery, ++currentPage);\n        main.innerHTML = '';\n        console.log(moviesList);\n\n        moviesList.results.map(elem => {\n          main.insertAdjacentHTML('beforeend', render(elem));\n        });\n        onTopScroll();\n      });\n      document.querySelectorAll('.pagination__number').forEach(button => {\n        const pageIndex = Number(button.getAttribute('page-index'));\n        if (pageIndex) {\n          button.addEventListener('click', async () => {\n            pagination.setCurrentPage(pageIndex);\n            currentPage = pageIndex;\n\n            moviesList = await getMovies(searchQuery, currentPage);\n            main.innerHTML = '';\n            console.log(moviesList);\n\n            moviesList.results.map(elem => {\n              main.insertAdjacentHTML('beforeend', render(elem));\n            });\n            onTopScroll();\n          });\n        }\n      });\n    }\n  }\n}\n\nexport { renderFoundMovies };\n\n// toTopBtn.addEventListener('click', onTopScroll);\n\n// window.addEventListener('scroll', onScrollToTopBtn);\n\n// function onScrollToTopBtn() {\n//   const offsetTrigger = 100;\n//   const pageOffset = window.pageYOffset;\n\n//   pageOffset > offsetTrigger\n//     ? toTopBtn.classList.remove('is-hidden')\n//     : toTopBtn.classList.add('is-hidden');\n// }\n\n// function onTopScroll() {\n//   window.scrollTo({\n//     top: 0,\n//     behavior: 'smooth',\n//   });\n// }\n// export { onTopScroll };\n","import axios from 'axios';\nconst API_KEY = 'b942b8bf626a04f48b07153a95ee51a0';\nconst API_URL = 'https://api.themoviedb.org/3/search/movie';\nconst loader = document.querySelector('.loader');\n\nexport async function getMovies(query, pageNumber = 1) {\n  loader.style.display = 'block';\n  try {\n    const response = await axios.get(API_URL, {\n      params: {\n        api_key: `${API_KEY}`,\n        query: `${query}`,\n        page: pageNumber,\n      },\n    });\n    loader.style.display = 'none';\n    return response.data;\n  } catch (error) {\n    loader.style.display = 'none';\n    console.error(error);\n  }\n}\n","const openBtn = document.querySelector('.footer__authors');\nconst closeBtn = document.querySelector('.students-modal__close-btn');\nconst modal = document.querySelector('.data-modal');\n\n// pokaż modal\nconst showStudents = () => {\n  modal.classList.remove('is-hidden');\n  \n  addEventListener('keydown', clickEscape);\n  addEventListener('click', closeByClick);\n};\n// zamknij modal\nconst closeStudents = () => {\n  modal.classList.add('is-hidden');\n \n  removeEventListener('keydown', clickEscape);\n  removeEventListener('click', closeByClick);\n};\n//zamknij na esc\nconst clickEscape = event => {\n  if (event.keyCode === 27) {\n    closeStudents();\n  }\n};\n// zamknij na klik poza oknem modalnym\nconst closeByClick = event => {\n  if (\n    !event.target.classList.contains('is-hidden') &&\n    !event.target.closest('.students-modal') &&\n    event.target.className !== 'footer__authors'\n  ) {\n    closeStudents();\n  }\n};\nopenBtn.addEventListener('click', showStudents);\ncloseBtn.addEventListener('click', closeStudents);\n","import { renderMovieCard } from './js/getAndRenderTopRatedMovies';\nrenderMovieCard();\nimport { advencedSearch } from './js/advencedSearch.js';\nimport { addToLocalStorage } from './js/addToLocalStorage.js';\nimport { modalWindow } from './js/modalWindow.js';\nimport { renderFoundMovies } from './js/searchAndRenderMovies.js';\nimport './js/toTopBtn';\nimport './js/students';\nimport './js/firebase';\n"],"names":["$dfaf77c789ce7a24$var$pageCount","$dfaf77c789ce7a24$var$currentPage","$67ff39b709ebda48$var$globalNextBtnFunc","$67ff39b709ebda48$var$globalPrevBtnFunc","$67ff39b709ebda48$var$genreList","$7pbsT","parcelRequire","$084c42c6fce2558a$var$loader","document","querySelector","$084c42c6fce2558a$var$API_KEY","$084c42c6fce2558a$export$60e1c8f5f122c5ac","default","link","pageNumber","response","error","_arguments","length","style","display","$dIxxU","get","params","api_key","concat","page","language","_state","sent","console","log","$fcf0b2ff60ad8845$var$singleMovieGenres","$fcf0b2ff60ad8845$export$b3890eb0ae9dca99","elem","genreList","$67ff39b709ebda48$export$321e906c11f8df73","movieGenresIds","map","id","name","$fcf0b2ff60ad8845$export$ac35e66c181d10d8","genre_ids","data","genres","title","$e4Itz","imageExists","poster_path","getMovieYear","release_date","$dfaf77c789ce7a24$var$paginationNumbers","getElementById","$dfaf77c789ce7a24$export$20141bf56c9254ea","$dfaf77c789ce7a24$export$9830b7182e908d9c","$dfaf77c789ce7a24$var$appendPageNumber","index","div","createElement","className","innerHTML","classList","add","appendChild","setAttribute","div1","$dfaf77c789ce7a24$export$4090a77486c7743","pages","i","$dfaf77c789ce7a24$var$disableButton","button","$dfaf77c789ce7a24$var$enableButton","remove","removeAttribute","$dfaf77c789ce7a24$export$5e52cab53995b7b9","pageNum","dots","querySelectorAll","forEach","pageIndex","Number","getAttribute","$dfaf77c789ce7a24$var$displayLessPages","$67ff39b709ebda48$var$main","$67ff39b709ebda48$var$currentPage","$67ff39b709ebda48$export$605b145a07818080","movies","$80lIJ","getGenresList","results","insertAdjacentHTML","total_pages","$dEmTs","onTopScroll","addEventListener","$67ff39b709ebda48$export$e8e81d074b5cdbfb","removeEventListener","$4f43006a27c86238$var$genres","$4f43006a27c86238$var$genresClear","$4f43006a27c86238$var$SelectedAPI","$4f43006a27c86238$var$selectedGenre","$4f43006a27c86238$var$tmp","event","then","listOfGenres","movieGenre","innerText","push","includes","idClear","splice","$4f43006a27c86238$var$ByGenres_API_URL","encodeURI","join","append","_loop","$21143d9a2fe25349$var$API_KEY","$21143d9a2fe25349$var$API_URL","$21143d9a2fe25349$var$loader","$21143d9a2fe25349$export$60e1c8f5f122c5ac","query","$21143d9a2fe25349$var$_getMovies","apply","this","arguments","$a1b95faebac548f9$var$header","$a1b95faebac548f9$var$main","$a1b95faebac548f9$var$inputSearch","$a1b95faebac548f9$var$searchButton","$a1b95faebac548f9$var$currentPage","$a1b95faebac548f9$var$_renderFoundMovies","searchQuery","moviesList","preventDefault","value","alert","$470a45cf0b35b7b7$var$openBtn","$470a45cf0b35b7b7$var$closeBtn","$470a45cf0b35b7b7$var$modal","$470a45cf0b35b7b7$var$closeStudents","$470a45cf0b35b7b7$var$clickEscape","$470a45cf0b35b7b7$var$closeByClick","keyCode","target","contains","closest"],"version":3,"file":"index.5d2242a1.js.map"}